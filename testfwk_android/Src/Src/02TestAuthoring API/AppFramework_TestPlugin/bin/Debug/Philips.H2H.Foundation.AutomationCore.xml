<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Philips.H2H.Foundation.AutomationCore</name>
    </assembly>
    <members>
        <member name="M:Philips.H2H.Foundation.AutomationCore.BrowserDriver.TakeScreenshot(System.String)">
            <summary>
            Takes a Screenshot of the current application page.
            </summary>
            <param name="fileName">Name of the File Name</param>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.MobileDriver.SetAppiumCapabilityForIOS(System.String,Philips.H2H.Foundation.AutomationCore.Mobile.MobileDriverConfig)">
            <summary>
            added by Ananya on 13th April at 11:30 am to set the capabilities for Ios
            </summary>
            <param name="sAutomationName"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.MobileDriver.CloseApp">
            <summary>
            Quit/Kill driver instance and Close Application
            </summary>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.MobileDriver.WaitForActivity(System.String)">
            <summary>
            Wait for Application's Activity for maximum 8 seconds. 
            </summary>
            <param name="sActivity">Name of Activity</param>
            <returns>Returns true or false</returns>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.MobileDriver.Swipe(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Performs swipe operation
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.MobileDriver.TakeScreenshot(System.String)">
            <summary>
            Takes a Screenshot of the current application page.
            </summary>
            <param name="fileName">Name of the File Name</param>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.MobileDriver.SuspendApp(System.Int32)">
            <summary>
            Suspends the Applications and Run it in background
            </summary>
            <param name="seconds"></param>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.MobileDriver.ResetApp">
            <summary>
            Resets the Applications to its initia state. Removes all the application data
            </summary>
        </member>
        <member name="P:Philips.H2H.Foundation.AutomationCore.MobileDriver.CurrentActivity">
            <summary>
            Returns the Current Activity Name
            </summary>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.ThreadSleep(System.Int32)">
            <summary>
            Suspends the current thread for specified time.
            </summary>
            <param name="miliseconds"></param>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.GetUniqueNumber">
            <summary>
            Gets an Unique Number based on the time stamp.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.CreateDirectoryIfNotExist(System.String)">
            <summary>
            Creates a Directory if does not exist in the given path
            </summary>
            <param name="path">returns DirectoryInfo</param>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.CheckServerStatus(System.String,System.String)">
            <summary>
            Checks that Server is up and connected
            </summary>
            <param name="server">address of the server</param>
            <param name="port">port number</param>
            <returns></returns>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.StartAppiumServer(Philips.H2H.Foundation.AutomationCore.Mobile.MobileDriverConfig)">
            <summary>
            Starts appium server
            </summary>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.CloseAppiumServer(System.Int32)">
            <summary>
            Stops appium server
            </summary>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.CheckAppiumServerRunning(Philips.H2H.Foundation.AutomationCore.Mobile.MobileDriverConfig)">
            <summary>
            Checks if the appium server is running
            </summary>
            <returns>true if appium server is running else false</returns>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.UninstallApkFromDevice(System.String,System.String)">
            <summary>
            Uninstall APK from the device
            </summary>
            <param name="packageName">Name of the package</param>
            <returns>true if the operation is success else false</returns>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.InstallApkToDevice(System.String,System.String)">
            <summary>
            Install android application in the device
            </summary>
            <param name="apkPath">path of the apk file</param>
            <returns></returns>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.CompareDictionary(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Checks two dictionary and compares the contents of it.        
            </summary>
            <param name="dict1"></param>
            <param name="dict2"></param>
            <returns></returns>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.StartADBLogCat">
            <summary>
            Starts adb logcat to record adb logs
            </summary>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.ExecuteAdbCommand(Philips.H2H.Foundation.AutomationCore.AutomationConstants.AdbShellCommand,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="adbCommands"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Philips.H2H.Foundation.AutomationCore.UtilityAuto.CloseSeleniumServer(Philips.H2H.Foundation.AutomationCore.BrowserDriver.BrowserType)">
            <summary>
            Stops Selenium server
            </summary>
        </member>
    </members>
</doc>

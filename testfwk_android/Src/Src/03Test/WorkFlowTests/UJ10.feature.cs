// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34209
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Philips.CDP.Automation.IAP.Tests.Workflows
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("UJ10", Description="In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
        "wo numbers", SourceFile="UJ10.feature", SourceLine=0)]
    public partial class UJ10Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "UJ10.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "UJ10", "In order to avoid silly mistakes\r\nAs a math idiot\r\nI want to be told the sum of t" +
                    "wo numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("UserJourney-10", new string[] {
                "mytag"}, SourceLine=6)]
        public virtual void UserJourney_10()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("UserJourney-10", new string[] {
                        "mytag"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
    testRunner.Given("User is on the Home Screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
       testRunner.Given("User is a second time user", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
       testRunner.When("User selects country store and clicks on Shop Now", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
       testRunner.Then("verify user is in product catalog view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
    testRunner.And("select \"HX9042/64\" from product catalog view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
       testRunner.And("select \"HX9002/64\" from product catalog view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
    testRunner.When("User Clicks on Continue Shopping", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
       testRunner.Then("verify user is in product catalog view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
    testRunner.Then("I go to home screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
       testRunner.Then("Verify on repeated click of  Buy Now  feature", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 18
    testRunner.Then("Verify the status of shopping icon when the app is sent to back ground and brough" +
                    "t to foregound", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
    testRunner.Then("Verify the status of shopping icon when the app is closed and relaunched", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
    testRunner.Then("click on  shopping cart icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
       testRunner.Then("Verify shopping cart has \"Sonicare AdaptiveClean Standard sonic toothbrush heads\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
       testRunner.Then("Verify shopping cart has \"Sonicare InterCare Standard sonic toothbrush heads\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 24
       testRunner.When("User increments quantity of \"Sonicare AdaptiveClean Standard sonic toothbrush hea" +
                    "ds\" to \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
       testRunner.When("User increments quantity of \"Sonicare InterCare Standard sonic toothbrush heads\" " +
                    "to \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
       testRunner.Then("verify delivery and VAT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
       testRunner.Then("verify the total number of product list and the total cost", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
       testRunner.Then("user clicks on checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
       testRunner.Then("verify previous shipping address is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 30
       testRunner.Then("select add a new address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 31
       testRunner.When("invalid shipping address is entered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
    testRunner.Then("verify error message is seen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 33
       testRunner.Then("Enter a valid shipping address and click continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 34
       testRunner.When("billing address is different from shipping address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
       testRunner.Then("user clicks on cancel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 36
       testRunner.Then("Verify user is in shopping cart view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 37
       testRunner.Then("user clicks on checkout", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 38
       testRunner.Then("verify previous shipping address is selected", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
       testRunner.Then("click on Deliver to this address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 40
       testRunner.When("billing address is different from shipping address", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
    testRunner.Then("enter valid billing address and click continue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 42
       testRunner.Then("verify user is in Order summary page shippingaddress,Voucher discount,UPS Parcel," +
                    "Totalcost,Vat and totalquantity", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 43
    testRunner.Then("User clicks on Paynow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 45
       testRunner.Then("verify user is on payment screen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
       testRunner.When("Invalid card data is entered", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
       testRunner.Then("verify user gets a failed message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion

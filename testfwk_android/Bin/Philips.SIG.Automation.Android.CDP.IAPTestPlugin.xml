<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Philips.SIG.Automation.Android.CDP.IAPTestPlugin</name>
    </assembly>
    <members>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address">
            <summary>
            This class provides all the functionalities and constants for features related to Address.
            </summary>
        </member>
        <member name="F:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAP_Common.objRep">
            <summary>
            An object of the type ObjectRepository
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.EnterText(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.EditText,System.String)">
            <summary>
            Enters text into the corresponding EditText field
            </summary>
            <param name="et">et represents the name of the EditText </param>
            <param name="txtValue">txtValue represents the string to be entered</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Swipe(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Direction,System.Int32)">
            <summary>
            Swipes across the Screen by the desired amount
            </summary>
            <param name="direction">direction represents the Direction of Swipe</param>
            <param name="value">value represents the amount by which the screen needs to be swiped</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.GetText(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.EditText)">
            <summary>
            Returns the text present in the EditText field
            </summary>
            <param name="et">et represents the name of the EditText, whose text value is required</param>
            <returns>a string value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.GetHeader">
            <summary>
            Returns a string containing the Title of the Page
            </summary>
            <returns>a string value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Button)">
            <summary>
            Clicks the desired button
            </summary>
            <param name="btn">btn represents the name of the Button to be clicked</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.IsExist(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Button)">
            <summary>
            Returns true of the desired button is present
            </summary>
            <param name="btn">btn represents the name of the Button</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.IsEnabled(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Button)">
            <summary>
            Returns true if the desired button is Enabled
            </summary>
            <param name="btn">btn represents the name of the Button</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.IsEnabled(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.EditText)">
            <summary>
            Returns true if the desired EditText field is Enabled
            </summary>
            <param name="et">btn represents the name of the EditText field</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.IsVisible(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Button)">
            <summary>
            Returns true of the desired button is visible on the current screen
            </summary>
            <param name="btn">btn represents the name of the Button</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Swipe(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Direction)">
            <summary>
            Swipes in the desired direction
            </summary>
            <param name="direction">direction represents the swipe direction</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.ValidateTextFields(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.EditText,Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.EditText,System.String)">
            <summary>
            This Function Enters a Text and then captures the Validation Text.
            The User is expected to send a "" in the argument.
            User need not call EnterText Function.
            User needs to send the next field, for the current text field to be de-focussed.
            </summary>
            <param name="txtFieldToEnterValidationText">txtFieldToEnterValidationText represents the field name whose validation needs to be performed</param>
            <param name="nextTxtField">nextTxtField represent the name of any other field</param>
            <param name="txtValue">txtValue represents the null string with which validation can be checked</param>
            <returns></returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.WaitforAddressScreen">
            <summary>
            Waits till the Address Screen appears
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.HideKeyboard(System.String)">
            <summary>
            Hides the virtual keyboard
            User must enter the OS type in "", with the first letter in capital
            </summary>
            <param name="osType">osType represents the OS Type</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.CreateAddress(System.String,System.String,Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.ContextMenu.MenuItem,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Creates a new Address 
            CreateAddress("abhi","ram",ContextMenu.MenuItem.Mr,"Software Tech park","St Loius","560045","US","99988887770",true);
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.IsVisible">
            <summary>
            Returns a string containing the screen title.
            </summary>
            <returns>string value representing the page title</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.EditText">
            <summary>
            Collection of all EditTexts
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Direction">
            <summary>
            Collection of constant values Representing Swipe Direction
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.Button">
            <summary>
            Provides collection of all the buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.ContextMenu">
            <summary>
            This class provides all the functionalities and constants for features related to Context menu.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.ContextMenu.Select(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.ContextMenu.Fields,Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.ContextMenu.MenuItem)">
            <summary>
            Selects a field in the menu item
            </summary>
            <param name="flds">flds represents the context menu for state and salutation</param>
            <param name="mI">mI represents the menu item</param>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.ContextMenu.MenuItem">
            <summary>
            Provides collection of all menu items.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Address.ContextMenu.Fields">
            <summary>
            Provides collection of salutation and state fields.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Country">
            <summary>
            
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Confirmation">
            <summary>
            This class provides all the functionalities and constants for features related to Confirmation page.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Confirmation.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Confirmation.Button)">
            <summary>
            Clicks the desired button
            </summary>
            <param name="btn">btn represents the name of the Button</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Confirmation.GetText(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Confirmation.TextView)">
            <summary>
            Returns a string containing the content of the TextView
            </summary>
            <param name="tv">tv represents the TextView name</param>
            <returns>a string value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Confirmation.WaitforConfirmationScreen">
            <summary>
            Waits for the Shopping Cart Screen
            Returns false if the Shopping Cart Screen doesn't appear after loopcount exceeds 10
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Confirmation.Button">
            <summary>
            Collection of all Buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Confirmation.TextView">
            <summary>
            Collection of all TextViews
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen">
            <summary>
            This class provides all the functionalities and constants for features related to Login page.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.Button)">
            <summary>
            Clicks on the desired Button
            </summary>
            <param name="btn">btn represents the name of the Button</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.CheckBox)">
            <summary>
            Clicks on desired CheckBox
            </summary>
            <param name="chkBox">chkBox represents the name of the CheckBox</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.IsEnabled(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.Button)">
            <summary>
            Returns true if the desired Button is Enabled
            </summary>
            <param name="btn">btn represents the name of the Button</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.IsEnabled(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.CheckBox)">
            <summary>
            Returns true if the desired CheckBox is Enabled
            </summary>
            <param name="btn">btn represents the name of the CheckBox</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.WaitforLoginScreen">
            <summary>
            Waits for the Login Screen page to appear
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.IsVisible">
            <summary>
            Checks if the Screen Title is "Log In"
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.GetScreenTitle">
            <summary>
            Returns a string containing the Screen Title
            </summary>
            <returns>a string value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.EnterText(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.EditText,System.String)">
            <summary>
            Enters the Username and Password
            </summary>
            <param name="tb">tb must contain the textbox name</param>
            <param name="name">name must contain the string to be entered</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.Login(System.String,System.String)">
            <summary>
            Enters username and password and clicks on Submit Button
            </summary>
            <param name="usrname">usrname must contain the Username</param>
            <param name="pwd">pwd must contain the password</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.LoginUser(System.String,System.String)">
            <summary>
            Executes all the Login process
            Clicks on Philips Account Button
            Enters username and password, stored in the AppConfig file
            Checks the Terms and Condition Checkbox
            Clicks continue till HomeScreen Psge appears
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.Button">
            <summary>
            Collection of all Buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.EditText">
            <summary>
            Collection of all ExitTexts
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.CheckBox">
            <summary>
            Collection of all CheckBoxes
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.LoginScreen.TextView">
            <summary>
            Collection of all TextViews
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AccountSettings">
            <summary>
            This class provides all the functionalities and constants for features related to Account Settings.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AccountSettings.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AccountSettings.Button)">
            <summary>
            Clicks on the desired Button
            </summary>
            <param name="btn">btn represents the name of the Button</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AccountSettings.Select(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AccountSettings.CheckBox)">
            <summary>
            Selects a Checkbox
            </summary>
            <param name="cb">cb represents the name of the CheckBox</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AccountSettings.IsScreenVisible">
            <summary>
            Returns true if the Account Settings page is visible
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AccountSettings.CheckBox">
            <summary>
            Collection of all CheckBoxes
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AccountSettings.Button">
            <summary>
            Collection of all Buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.PhilipsAnnouncements">
            <summary>
            This class provides all the functionalities and constants related to Philips Announcements.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.PhilipsAnnouncements.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.PhilipsAnnouncements.Button)">
            <summary>
            Clicks the desired Button
            </summary>
            <param name="btn">btn represents the name of the Button</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.PhilipsAnnouncements.GetTitle">
            <summary>
            Returns a string containing the title of the Page
            </summary>
            <returns>a string value</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.PhilipsAnnouncements.Button">
            <summary>
            Collection of all Buttons
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.Button)">
            <summary>
            Clicks the desired Button
            </summary>
            <param name="btn">btn represents the name of the Button</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.EnterText(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.EditBox,System.String)">
            <summary>
            Enters text in the desired EditText field
            </summary>
            <param name="ed">ed represents the name of the EditText field</param>
            <param name="txtValue">txtValue represents the string value that the user wants to enter</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.Select(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.DropDown,System.String)">
            <summary>
            Clicks on the DropDown and selects the specified value
            </summary>
            <param name="dropDown">dropDown represent the name of the dropdown</param>
            <param name="index">index represents the value which needs to be selected in the dropdown</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.Swipe(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.Direction,System.Int32)">
            <summary>
            Swipes in the desired direction by desired amount
            </summary>
            <param name="direction">Represents the direction</param>
            <param name="value">Represents the amount by which User wants to Swipe</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.GetPageTitle">
            <summary>
            Returns a string containing Screen Title
            </summary>
            <returns>a string value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.WaitforPaymentScreen">
            <summary>
            Waits for the Shopping Cart Screen
            Returns false if the Shopping Cart Screen doesn't appear after loopcount exceeds 10
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.GetHeader">
            <summary>
            Returns a string containing the Header of the page
            </summary>
            <returns>string value representing the header value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.GetListofPaymentMethods">
            <summary>
            Returns a list of Payment Methods
            </summary>
            <returns>list of Payment methods</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.SelectPaymentMethod(System.String)">
            <summary>
            Accepts a string containing the Card Name and selects the corresponding Payment Method
            </summary>
            <param name="name">name represents the card name</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.EnterPaymentDetails(System.String,System.String,System.String,System.String)">
            <summary>
            User enters the Payment Details
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.MakeVisible(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.EditBox)">
            <summary>
            PATTABHI: TO BE RE_VISITED
            </summary>
            <param name="tv"></param>
            <returns></returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.EditBox">
            <summary>
            Collection of all EditBoxes
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.Button">
            <summary>
            Collection of all Buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.DropDown">
            <summary>
            Collection of all DropDowns
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.Direction">
            <summary>
            Collection of constant values Representing Swipe Direction
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Payment.Payment_Method">
            <summary>
            Provides a construct for accessing Payment methods in the Payment page
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.CancelPayment.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.CancelPayment.Button)">
            <summary>
            Clicks the desired Button
            </summary>
            <param name="btn">btn represents the desired Button</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.CancelPayment.IsExist">
            <summary>
            Returns true if the Cancel Payment View is present
            </summary>
            <returns>boolean value</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.CancelPayment.Button">
            <summary>
            Collection of all Buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen">
            <summary>
            This class provides all the functionalities and constants for features related to Product Screen page.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Button)">
            <summary>
            Clicks the desired button
            </summary>
            <param name="btn">btn represents one of the buttons present on the screen</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.IsEnabled(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Button)">
            <summary>
            Checks if a button is Enabled or not
            </summary>
            <param name="btn">btn represents one of the buttons present on the screen</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen._getButtonSet">
            <summary>
            Returns a list of IMobilePageControls, containing all desired buttons and Textviews
            </summary>
            <param name="btn">btn reprents the name of the button </param>
            <param name="tv">btn reprents the name of the button </param>
            <returns>a list of IMobilePageControls</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Swipe(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Direction,System.Int32)">
            <summary>
            Slides the Product image in left or right direction.
            </summary>
            <param name="direction">direction represents the direction </param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.WaitforProductScreen">
            <summary>
            Waits for the ProductScreen page to appear
            Returns false if the Product Screen doesn't appear after loopcount exceeds 10
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.IsVisible">
            <summary>
            Checks if the Screen Title is "Products"
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Click(System.String,Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Button)">
            <summary>
            Clicks the desired button of the corresponding Product name
            </summary>
            <param name="productname">productname must contain a string containing the name of the product</param>
            <param name="btn">btn represents the name of the button to be clicked</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.GetScreenTitle">
            <summary>
            Returns a string containing the Screen Title
            </summary>
            <returns>a string value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.GetProductListItems">
            <summary>
            Returns a list of all the products present in the Product screen.
            </summary>
            <returns>a list of strings representing the product names.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen._getProductListed">
            <summary>
            Returns a list of all the products present in the Product Screen.
            </summary>
            <returns>a list of strings representing the product id's</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.IsExist(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Button)">
            <summary>
            It returns bool value if button exist or not
            </summary>
            <param name="btn">check desired button is exist or not</param>
            <returns>if exist return true else false</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.SelectProduct(System.String)">
            <summary>
            Finds and selects a product based on the product id
            </summary>
            <returns>nothing</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.GetTextFromCart">
            <summary>
            Returns the number from the Shopping Cart Icon
            </summary>
            <returns>a string value</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Product">
            <summary>
            Provides a construct for accessing product details in the Product Screen.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Direction">
            <summary>
            Provides colletion of constant values representing swipe direction in the Product Screen page.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.Button">
            <summary>
            Collection of all Buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductScreen.TextView">
            <summary>
            Collection of all TextViews
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.StockElement">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Stock).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductElement">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Product).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.TotalPriceElement">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(TotalPrice).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Entry">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Entry).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.TotalPriceWithTax">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(TotalPriceWithTax).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Cart">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Cart).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.CartList">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call for Get Cart(GET).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.CartEntriesList">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call to Get Cart Entries(GET).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.CountryElement">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Country).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Region">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Region).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Addresses">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Addresses).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AddressList">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call to get addresses(GET).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.BillingAddress">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Billing Address).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.CardType">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Card Type).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.PaymentElement">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Payment).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.PaymentList">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call to get payment details(GET).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.CreateCartResult">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call to create cart details(POST).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AddToCartResponse">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call to add cart details(POST).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.CreateAddressResponse">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call to create addresses(POST).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.PaymentResponse">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Payment).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Promotion">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(Promotion).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.AppliedOrderPromotion">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(AppliedOrderPromotion).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.DeliveryAddress">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(DeliveryAddress).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.DeliveryCost">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(DeliveryCost).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.DeliveryMode">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(DeliveryMode).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.TotalPriceWithTaxDetail">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(TotalPriceWithTaxDetail).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.DeliveryOrderGroup">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(DeliveryOrderGroup).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.OrderDiscounts">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(OrderDiscounts).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.PaymentInfo">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(PaymentInfo).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ProductDiscounts">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(ProductDiscounts).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.SubTotal">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(SubTotal).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.TotalDiscounts">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(TotalDiscounts).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.TotalTax">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API calls(TotalTax).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.User">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(User).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.UnconsignedEntry">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(UnconsignedEntry).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.SubmitOrderResponse">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call to post submit order(POST).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.DeliveryModeDetail">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call(DeliveryModeDetail).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.DeliveryModeList">
            <summary>
            This class is a POJO used to deserialize JSON responses recieved from REST API call to get delivery modes(GET).
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker">
            <summary>
            This class is used to invoke REST APIs from the tests.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.GetCart(System.String,System.String)">
            <summary>
            This method calls the Get Cart API to fetch all the carts defined for logged in user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <returns>It returns a list of carts as an object of CartList class.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.GetCartEntries(System.String,System.String)">
            <summary>
            This method calls the Get Cart Entries API to fetch all the entries in the cart defined for logged in user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <returns>It returns a list of carts as an object of CartEntriesList class.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.GetAddresses(System.String,System.String)">
            <summary>
            This method calls the Get Addresses API to fetch all the addresses defined for logged in user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <returns>It returns a list of carts as an object of AddressList class.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.GetPaymentDetails(System.String,System.String)">
            <summary>
            This method calls the Get Payment Details API to fetch all the payment details defined for logged in user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <returns>It returns a list of carts as an object of PaymentList class.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.CreateCart(System.String,System.String)">
            <summary>
            This method calls the Create Cart API(POST) to create a new cart for logged in user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <returns>It returns a list of carts as an object of CreateCartResult class.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.AddToCart(System.String,System.String,System.String,System.String)">
            <summary>
            This method calls the Add to Cart API(POST) to add items to the cart for logged in user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="cartNumber">cartNumber represents the cart number to which the items are to be added.</param>
            <param name="itemCode">itemCode represents the item to be added.</param>
            <returns>It returns a list of carts as an object of AddToCartResponse class</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.CreateAddress(System.String,System.String,System.String)">
            <summary>
            This method calls the Create Address API(POST) to create new addresses for logged in user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="newAddress">newAddress represents the address to be added.</param>
            <returns>It returns the address as an object of CreateAddressResponse class.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.GetDeliveryModes(System.String,System.String,System.String)">
            <summary>
            This method calls the Get Delivery Modes API to get the delivery modes for given user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="cartNumber">cartNumber represents the cart number for which the delivery mode is to </param>
            <returns>It returns the list of delivery modes for given cart.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.GetSearchCategories(System.String,System.String)">
            <summary>
            This method calls the Get Search Categories API to get the list of products available.
            </summary>
            <param name="searchCriteria">searchCriteria represents the criteria for search</param>
            <returns>It returns the list of products.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.SubmitOrder(System.String,System.String,System.String)">
            <summary>
            This method calls the Submit Order API to post the order details for given user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="cartNumber">cartNumber represents the cart number for which the order is to be placed.</param>
            <returns>It returns the submitted order for given cart.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.PostPayment(System.String,System.String,System.String,System.String)">
            <summary>
            This method calls the Post Payment API to post the payment details for given user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="orderId">orderId represents the orderId for which payment is to be done.</param>
            <param name="addressId">addressId represents the addressId for payment.</param>
            <returns>It returns the payment in PaymentResponse class.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.DeleteCart(System.String,System.String,System.String)">
            <summary>
            This method calls the Delete Cart API to delete the cart for given user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="cartNumber">cartNumber represents the cart number for which the order is to be placed.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.DeleteAddress(System.String,System.String,System.String)">
            <summary>
            This method calls the Delete Address API to delete the address for given user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="addressId">addressId represents the addressId.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.SetDeliveryAddress(System.String,System.String,System.String,System.String)">
            <summary>
            This method calls the Set Delivery Address API to set the address for given user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="cartNumber">cartNumber represents the cart number for which the order is to be placed.</param>
            <param name="addressId">addressId represents the addressId.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.SetDeliveryMode(System.String,System.String,System.String,System.String)">
            <summary>
            This method calls the Set Delivery Address API to set the delivery mode for given user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="cartNumber">cartNumber represents the cart number for which the order is to be placed.</param>
            <param name="deliveryModeId">deliveryModeId represents the delivery mode.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.SetPaymentDetails(System.String,System.String,System.String,System.String)">
            <summary>
            This method calls the Set Payment Details API to set the payment details for given user.
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="cartNumber">cartNumber represents the cart number for which the order is to be placed.</param>
            <param name="paymentId">paymentId represents the payment Id.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestApiInvoker.GetJanRainToken(System.String,System.String,System.String,System.String)">
            <summary>
            Get a janrain token
            </summary>
            <param name="username">username represents the logged in user.</param>
            <param name="cartNumber">cartNumber represents the cart number for which the order is to be placed.</param>
            <param name="paymentId">paymentId represents the payment Id.</param>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen">
            <summary>
            This class provides all the functionalities and constants for features related to Home Screen page.
            </summary>
        </member>
        <member name="F:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.loginId">
            <summary>
            Represents the static variable consisting the login id
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Button)">
            <summary>
            Clicks the desired button
            </summary>
            <param name="btn">btn represents one of the buttons present on the screen</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.IsEnabled(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Button)">
            <summary>
            Checks if a button is Enabled or not
            </summary>
            <param name="btn">btn represents one of the buttons present on the screen</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.GetProductCount">
            <summary>
            Returns the number of product items appearing in the HomeScreen
            </summary>
            <returns>integer value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.GetProductName(System.Int32)">
            <summary>
            Returns a string containing the name of the product the user wants to select
            </summary>
            <param name="indx">indx represents the index of the product the user wants to select</param>
            <returns>string value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.SelectProduct(System.Int32)">
            <summary>
            Clicks the BuyNow button of the product that user wants to buy
            </summary>
            <param name="indx">indx reprensents the index of the product the user wants to buy</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen._getProductListed">
            <summary>
            This method retrieve list of productid's from ProductList
            </summary>
            <returns>List of product id's:HX089/16,HX067/10</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.GetTextFromCart">
            <summary>
            Returns the number from the Shopping Cart Icon
            </summary>
            <returns>a string value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.getProductList">
            <summary>
            Returns a list of IMobilePageControls, containing all the Products present in the HomeScreen
            </summary>
            <returns>a list of IMobilePageControls</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.GetProductListItems">
            <summary>
            Returns a list of Strings, containing all the product names present in the HomeScreen
            </summary>
            <returns>a list of strings</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.WaitforHomeScreen">
            <summary>
            Waits for the HomeScreen page to appear
            Returns false if the Shopping Cart Screen doesn't appear after loopcount exceeds 10
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.IsVisible">
            <summary>
            Checks if the Screen Title is "Demo App"
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.GetScreenTitle">
            <summary>
            Returns a string containing the Screen Title
            </summary>
            <returns>a string value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.GetButtons(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Button)">
            <summary>
            Returns a list of IMobilePageControls, containing all desired buttons
            </summary>
            <param name="btn">btn reprents the name of the button </param>
            <returns>a list of IMobilePageControls</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Click(System.String,Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Button)">
            <summary>
            Clicks the desired button of the corresponding Product name
            </summary>
            <param name="productname">productname must contain a string containing the name of the product</param>
            <param name="btn">btn represents the name of the button to be clicked</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen._getButtonSet">
            <summary>
            Returns List of Buttons in the Home Screen
            </summary>
            <returns></returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.stockLevel">
            <summary>
            Returns the stock level by calling the REST API to get cart entries
            </summary>
            <returns>Integer value representing stock level</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Button">
            <summary>
            Collection of all Buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.TextBox">
            <summary>
            Collection of all TextBoxes
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Fields">
            <summary>
            Collection of all Fields
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Spinner">
            <summary>
            Collection of all Spinner
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Product">
            <summary>
            This structure provides details/attributes related to Product.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.ContextMenu">
            <summary>
            This class provides all the functionalities and constants for features related to Context menu.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.ContextMenu.Select(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.Fields,Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.ContextMenu.MenuItem)">
            <summary>
            Selects a field in the menu item
            </summary>
            <param name="flds">flds represents the context menu for state and salutation</param>
            <param name="mI">mI represents the menu item</param>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.HomeScreen.ContextMenu.MenuItem">
            <summary>
            Provides collection of all menu items.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.NetWork_Error">
            <summary>
            This class represents the network error related functionalities under test.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.NetWork_Error.IsVisible">
            <summary>
            Returns true if the 'Network Error' pop up shows
            </summary>
            <returns>boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.NetWork_Error.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.NetWork_Error.Button)">
            <summary>
            Clicks the 'ok' button when the 'Network Error' pop up appears
            </summary>
            <param name="btn">btn represent the name of the Button</param>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.NetWork_Error.Button">
            <summary>
            Collection of all Buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Timeout_Error">
            <summary>
            This class represents the timeout error related functionalities under test.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Timeout_Error.IsVisible">
            <summary>
            Returns true if "Network Error" text is visible
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Timeout_Error.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Timeout_Error.Button)">
            <summary>
            Clicks the desired button
            </summary>
            <param name="btn">btn represents the name of the Button</param>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Timeout_Error.Button">
            <summary>
            Collection of all Buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Crash_Data">
            <summary>
            This class provides all the functionalities and constants for features related to Crash Data page.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Crash_Data.IsVisible">
            <summary>
            Returns true if "Crashed Data" text is visible
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Crash_Data.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Crash_Data.Button)">
            <summary>
            Clicks the desired button
            </summary>
            <param name="btn">btn represents the name of the Button</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Crash_Data.WaitforCrashScreen">
            <summary>
            Waits for the Crash Screen page to appear
            Returns false if the Crash Screen doesn't appear after loopcount exceeds 10
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Crash_Data.Button">
            <summary>
            Collection of all buttons
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration">
            <summary>
            This class represents the configurations required for IAP application.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.LoadConfiguration">
             <summary>
            Downloads the file from the server
            Configures and start the Appium Server
            Unlocks the Device
            Uninstall and Reinstalls the server version of the apk
            Launches the two applications
             </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.LoadConfiguration(Philips.H2H.Foundation.AutomationCore.Mobile.MobileDriverConfig)">
            <summary>
            Downloads the file from the server
            Starts the Appium Server
            Unlocks the Device
            Uninstall and Reinstalls the server version of the apk
            Launches the two applications
            </summary>
            <param name="mConfig">mConfig represents mobile driver configuration object</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.LoadConfigurationForDebug">
            <summary>
            This should be called when the app is already installed in the device.
            This starts the Appium server and launches the two applications
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.CloseAll">
            <summary>
            Stops the Performance monitor
            Pulls the Performance log from the device to the local server
            Deletes the Performance log from the device
            Closes the Appium server
            Uninstalls Apk from the device
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.DownloadApplicationUnderTest(System.String,System.String)">
            <summary>
            Checks if the latest build is present in the local folder. 
            If the latest build is not present, the apk is downloaded from the server
            </summary>
            <param name="serverUrl">serverUrl is the source from which the apk needs to be downloaded</param>
            <param name="destination">destination represents the location where the latest apk is downloaded</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.UninstallApkFromDevice(System.String,System.String)">
            <summary>
            Uninstalls the apk from the device
            </summary>
            <param name="packageName">packageName represents the package that has to be deleted from the device</param>
            <param name="deviceId">deviceId represents the device ID</param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.InstallApkToDevice(System.String,System.String)">
            <summary>
            Installs apk to the device
            </summary>
            <param name="apkPath">path where the apk should be installed</param>
            <param name="deviceId">Device ID </param>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.ExecuteProcess(System.String)">
            <summary>
            Executes commands in the command line 
            </summary>
            <param name="cmd">cmd represents the command that has to be executed</param>
            <returns>an integer value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.KillProcess(System.Int32)">
            <summary>
            Kills the specified process
            </summary>
            <param name="processId">processId represents the process ID to be killed</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.LoadConfigurationForiOS">
             <summary>
            Configures and start the Appium Server
            Launches the application
             </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.LoadConfigurationForiOS(Philips.H2H.Foundation.AutomationCore.Mobile.MobileDriverConfig)">
             <summary>
             Starts the Appium Server
            Launches the application
             </summary>
             <param name="mConfig">mConfig represents mobile driver configuration object</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.LoadConfiguration_Reliability">
             <summary>
             For reliability test
            Downloads the file from the server
            Configures and start the Appium Server
            Unlocks the Device
            Uninstall and Reinstalls the server version of the apk
            Launches the two applications
             </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.IAPConfiguration.CloseAll_Reliability">
            <summary>
            For Reliability Test
            Stops the Performance monitor
            Pulls the Performance log from the device to the local server
            Deletes the Performance log from the device
            Closes the Appium server
            Uninstalls Apk from the device
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestClientExtended">
            <summary>
            This class provides all the functionalities to make REST calls.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestClientExtended.MakeRequest(System.String)">
            <summary>
            Gets the Authorization token, checks the type of Request and makes the desired request.
            </summary>
            <param name="parameters">Takes url parameters.</param>
            <returns>Returns a JSON response returned from API call.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestClientExtended.FetchAuthorizationTokenfromJanrain(System.String)">
            <summary>
            Returns a string containing the Authorization token from Janrain.
            </summary>
            <param name="useruuid">useruuid represents the uuid of logged in user.</param>
            <returns>Authorization token valid for the user.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RestClientExtended.MakeRequestForAuth(System.String)">
            <summary>
            Returns a response string for every request made
            </summary>
            <param name="useruuid">useruuid represents the uuid of logged in user.</param>
            <returns>Authorization token valid for the user.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.Button)">
            <summary>
            Clicks the desired button in the Retailer Screen.
            </summary>
            <param name="btn">btn represents the name of the button to be clicked.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.GetRetailerListItems">
            <summary>
            Returns a list of all the retailers present in the Retailer screen.
            </summary>
            <returns>a list of strings representing the retailer names.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.Click(System.String,Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.Button)">
            <summary>
            Clicks the desired button of the corresponding Retailer name
            </summary>
            <param name="retailername">retailername must contain a string containing the name of the retailer</param>
            <param name="btn">btn represents the name of the button to be clicked</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen._getRetailorListed">
            <summary>
            Returns a list of all the Retailer present in the Retailer Screen.
            </summary>
            <returns>a list of strings representing the product names</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen._getButtonSet">
            <summary>
            Returns a list of IMobilePageControls, containing all desired buttons and Textviews
            </summary>
            <param name="btn">btn reprents the name of the button </param>
            <param name="tv">btn reprents the name of the button </param>
            <returns>a list of IMobilePageControls</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.WaitforRetailerScreen">
            <summary>
            Waits for the RetailerScreen page to appear
            Returns false if the Retailer Screen doesn't appear after loopcount exceeds 10
            </summary>
            <returns>a boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.Swipe(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.Direction,System.Int32)">
            <summary>
            Swipes across the Screen by the desired amount
            </summary>
            <param name="direction">direction represents the Direction of Swipe</param>
            <param name="value">value represents the amount by which the screen needs to be swiped</param>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.Button">
            <summary>
            Provides collection of all the buttons in the Retailer Screen.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.Direction">
            <summary>
            Provides colletion of constant values representing swipe direction in the Retailer Screen.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.TextView">
            <summary>
            Provides collection of all textviews in the Retailer Screen.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.RetailerScreen.Retailer">
            <summary>
            Provides a construct for accessing product details in the Retailer Screen.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress">
            <summary>
             This class provides all the functionalities and constants for features related to Shipping Address.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.Select(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.TextView)">
            <summary>
            Selects a field in the menu item
            </summary>
            <param name="tv">tv represents the textview of dots</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.WaitforShippingAddressScreen">
            <summary>
            Waits till Shipping Address screen appears.
            Returns false if the screen fails to load after loopcount exceeds 10.
            </summary>
            <returns>boolean value representing the appearance of the screen.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.Button)">
            <summary>
            Clicks the desired button in the Shipping Address screen.
            </summary>
            <param name="btn">btn represents the name of the button.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.Swipe(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.Direction,System.Int32)">
            <summary>
            Swipes across the Screen by the desired amount
            </summary>
            <param name="direction">direction represents the Direction of Swipe</param>
            <param name="value">value represents the amount by which the screen needs to be swiped</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.GetPageTitle">
            <summary>
            Returns a string containing the screen title.
            </summary>
            <returns>string value representing the page title</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.GetListofAddress(System.String)">
            <summary>
            Provides a list of Shipping Addresses present in the Shipping Address screen. 
            </summary>
            <returns>list of shipping addresses.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.SelectAddress(System.String,System.String)">
            <summary>
            Selects the shipping address based on the First Name of the logged in user.
            </summary>
            <param name="name">name represents first name of the user.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.GetList">
            <summary>
            Creates a list of Shipping Addresses which are present.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.GetBillingAddress">
            <summary>
            Returns a string containing billing address choice
            Same or different from shipping
            </summary>
            <returns>a string value</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.IsEnabled(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.Button)" -->
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.Button">
            <summary>
            Collection of all the buttons in the Shipping Address.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.TextBox">
            <summary>
            Collection of all textboxes in the Shipping Address.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.Direction">
            <summary>
            Collection of constant values Representing Swipe Direction
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.Shipping_Address">
             <summary>
            Provides a construct for accessing shipping address in the Address.
             </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.ContextMenu">
            <summary>
            This class provides all the functinoalities related to the Context Menu in Shipping Adddress screen.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.ContextMenu.Select(System.String,Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.ContextMenu.MenuItem,System.String)">
            <summary>
            Selects the desired Context Menu button in Shipping Adddress screen.
            </summary>
            <param name="Name">Name represents the name of the product.</param>
            <param name="mI">mI represents the name of Menu Item.</param>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShippingAddress.ContextMenu.MenuItem">
            <summary>
            Collection of all Menu Items in Shipping Adddress screen.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart">
            <summary>
            This class provides all the functionalities and constants for features related to Shopping Cart page.
            </summary>
        </member>
        <member name="F:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.totalcost">
            <summary>
            A variable to store the 
            
            cost of all the products
            </summary>
        </member>
        <member name="F:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.vat">
            <summary>
            A variable to store the VAT value in the Shopping Cart page
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.VerifyDeliveryParcelPrice">
            <summary>
            Verifies the price of UPS Delivery Parcel when the total cost is specified.
            </summary>
            <returns>Booelan value representing the correctness of price value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.GetText(System.String,Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.ProductDetailsText)">
            <summary>
            Fetches a string containing text from the desired TextView of the desired product in the Shopping Cart page.
            </summary>
            <param name="productName">productName represents the name of the product.</param>
            <param name="tv">tv represents the TextView name.</param>
            <returns>string value representing the text in the text view control for the product which was passed as parameter.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.GetText(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.TextView)">
            <summary>
            Returns the text from TextView in the Shopping Cart page. 
            If the screen is scrollable, it will call the Swipe function internally till the desired TextView is found.
            </summary>
            <param name="tv">txt represents the name of the textview for which the text needs to be retrieved.</param>
            <returns>string value representing the text in the text view control which was passed as parameter.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.GetRefinedText(System.String)">
            <summary>
            This Function gives back the actual value in String removing all the prefixes.
            Useful in getting the Price Value like $800 => 800
            USD 800 => 800
            </summary>
            <param name="rawValue">rawValue represents the string which needs to be refined to get the numeric value</param>
            <example>
            string VatValue = ShoppingCart.GetText(ShoppingCart.TextView.VAT);
            ShoppingCart.GetRefinedText(VatValue);
            </example>
            <returns>a string value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.Button)">
            <summary>
            Clicks the desired button in the Shopping Cart page.
            </summary>
            <param name="btn">btn represents the name of the button to be clicked.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.IsEnabled(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.Button)">
            <summary>
            Returns true if the desired button is enabled.
            </summary>
            <param name="btn">btn represents the name of the button.</param>
            <returns>Returns a Boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.GetScreenTitle">
            <summary>
            Returns a string containing the title of the screen.
            </summary>
            <returns>string value containing the title</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.IsVisible">
            <summary>
            Returns true if the Screen Title "Shopping Cart" is visible.
            </summary>
            <returns>boolean value representing the screen visibility.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.Select(System.String,System.Int32,System.Boolean)">
            <summary>
            To select the quantity of a given product from dropdown in Shopping Cart.
            </summary>
            <param name="qty">qty represents the number to be selected in the dropdown.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.SwipeProductList(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.Direction,System.Int32)">
            <summary>
            Swipes through the Shopping Cart page when scrollable is enabled.
            </summary>
            <param name="dirn">dirn represents the direction in which the dropdown should be swiped.</param>
            <param name="indx">indx represents the amount by which swipe should happen.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.SwipeQuantity(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.Direction,System.Int32)">
            <summary>
            Swipe through the quantity dropdown in Shopping Cart screen.
            </summary>
            <param name="dirn">dirn represents the direction in which swipe should be performed.</param>
            <param name="indx">indx represents the amount by which swipe must be performed.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.WaitforShoppingCartScreen">
            <summary>
            Waits for the Shopping Cart screen
            Returns false if the Shopping Cart screen doesn't appear after loopcount exceeds 10.
            </summary>
            <returns>boolean value representing the appearance of the screen.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.IsProductExist(System.String)">
            <summary>
            Returns true if the desired product exists.
            </summary>
            <param name="productName">productName represents the name of the product.</param>
            <returns>boolean value representing the existence of the product.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.GetAllProductPrice">
            <summary>
            Returns a list containing all the individual prices of the products present in the Shopping Cart screen.
            </summary>
            <returns>a list of strings representing the product prices.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.GetProductNames">
            <summary>
            Returns a list of all the products present in the Shopping Cart screen.
            </summary>
            <returns>a list of strings representing the product names.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.getFilteredProducts(System.Collections.Generic.List{Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.ProductDetails})">
            <summary>
            Returns list of distinct elements in the list
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.DeleteAllProducts">
            <summary>
            Deletes all the products present in the Shopping Cart screen.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart._getproductList">
            <summary>
            Returns a list containing ProductDetails.
            </summary>
            <returns>list of ProductDetails from the Shopping Cart screen.</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.Direction">
            <summary>
            Provides colletion of constant values representing swipe direction in the Shopping Cart page.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.Button">
            <summary>
            Provides collection of all the buttons in the Shopping Cart page.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.ProductDetailsText" -->
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.TextView">
            <summary>
            Provides details/values for 'Delivery Via UPS parcel' in the Shopping Cart page.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.ContextMenu">
            <summary>
            This class contains methods to select the Menu Items in the Context Menu.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.ContextMenu.Select(System.String,Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.ContextMenu.MenuItem)">
            <summary>
            Clicks the dotted menu button of the desired product and selects the desired options.
            </summary>
            <param name="productName">productName represents the name of the product.</param>
            <param name="mI">mI represents the operation that the user wants to perform. </param>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.ContextMenu.MenuItem">
            <summary>
            Collection of MenuItems
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCart.ProductDetails">
            <summary>
            Provides a construct for accessing product details in the Shopping Cart page.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem">
            <summary>
            This class provides all the functionalities and constants for features related to Shopping Cart Item.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.Button)">
            <summary>
            Clicks the desired button in the Shopping Cart page.
            </summary>
            <param name="btn">btn represents the name of the button to be clicked.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.WaitforShoppingCartInfoScreen">
            <summary>
            Waits for the Shopping Cart Info screen to appear
            Returns false if the Shopping Cart Info screen fails to appear after loopcount exceeds 5
            </summary>
            <returns>boolean value</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.IsVisible(System.String)">
            <summary>
            Returns true if the Screen title is 'Shopping Cart Item'.
            </summary>
            <returns>boolean value representing the visibility of Shopping Cart Item</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.GetText(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.TextView)">
            <summary>
            Returns string contaning text from the desired TextView.
            </summary>
            <param name="tv">tv represent the name of TextView.</param>
            <returns>string value containing the text value of the desired TextView.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.GetProductImage">
            <summary>
            Takes screenshot of the page, crops the product image from the Screenshot and returns its Bitmap.
            </summary>
            <returns>a Bitmap object representing the product image.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.IsSelected(System.Int32)">
            <summary>
            Returns true if the Slideshow Navigation Button at the desired index is selected.
            </summary>
            <param name="indx">indx represents the index of item.</param>
            <returns>boolean value representing the selection of the item which has been passed as a parameter.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.GetSelectedImageIndex">
            <summary>
            Returns the index of the Slideshow button which is currently selected.
            </summary>
            <returns>integer value representing the index of the selected image.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.GetCountofImages">
            <summary>
            Returns the number of images in the slide show.
            </summary>
            <returns>Integer value representing the count of images.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.Swipe(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.Direction,System.Int32)">
            <summary>
            Slides the Product image in left or right direction.
            </summary>
            <param name="direction">direction represents the direction </param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.IsExist(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.Button)">
            <summary>
            It returns bool value if button exist or not
            </summary>
            <param name="btn">check desired button is exist or not</param>
            <returns>if exist return true else false</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.Button">
            <summary>
            Provides collection of all the buttons in the Shopping Cart page.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.Direction">
            <summary>
            Provides colletion of constant values representing swipe direction in the Shopping Cart page.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.ShoppingCartItem.TextView">
            <summary>
            Provides collection of all textviews in the Shopping Cart page.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary">
            <summary>
            This class provides all the functionalities and constants for features related to Order Summary page.
            </summary>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.Click(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.Button)">
            <summary>
            Clicks the desired button in the Order Summary page.
            </summary>
            <param name="btn">btn represents the name of the button to be clicked.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.GetText(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.Text)">
            <summary>
            Returns the text from TextView in the Order Summary page.
            </summary>
            <param name="txt">txt represents the name of the textview for which the text needs to be retrieved.</param>
            <returns>string value representing the text in the text view control which was passed as parameter.</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.GetText">
            <summary>
            Returns prodct details in the Order Summary Page, as a list.
            </summary>
            <returns>List of type ProductDetails representing the product details</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.WaitforSummaryScreen">
            <summary>
            Waits for the Order Summary page to appear.
            </summary>
            <returns>Boolean value representing the screen appearance(true-appearance,false-nonappearance) </returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.GetScreenTitle">
            <summary>
            Returns a string containing the screen title in the Order Summary Page.
            </summary>
            <returns>String value representing the screen title</returns>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.Swipe(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.Direction,System.Int32)">
            <summary>
            Swipes the screen with specified magnitude in the direction provided.
            </summary>
            <param name="direction">Specifies the direction of swipe</param>
            <param name="value">Magnitude of swipe, to be performed.</param>
        </member>
        <member name="M:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.IsExist(Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.Text)">
            <summary>
            Checks for existence of the text view, in the Order Summary Page.
            </summary>
            <param name="tv">tv represents the name of the textview</param>
            <returns>Boolean value representing the presence of the text view in the Order Summary Page.</returns>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.Button">
            <summary>
            Provides collection of all the buttons in the Order Summary page.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.Text">
            <summary>
            Provides collection of all textviews in the Order Summary page.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.Direction">
            <summary>
            Provides colletion of constant values representing swipe direction in the Order Summary page.
            </summary>
        </member>
        <member name="T:Philips.SIG.Automation.Android.CDP.IAPTestPlugin.Summary.ProductDetails">
            <summary>
            Provides a construct for accessing products in the Order Summary page.
            </summary>
        </member>
    </members>
</doc>

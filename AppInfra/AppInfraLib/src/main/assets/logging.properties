#logging.properties file.
# "handlers" specifies a comma separated list of log Handler
# classes. These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.
# By default we only configure a ConsoleHandler, which will only
# show messages at the INFO and above levels.

java.util.logging.ConsoleHandler.level=FINE
#java.util.logging.ConsoleHandler.formatter=com.philips.appinfra.AIlogFormatter
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

  #handlers=  com.android.internal.logging.AndroidHandler
  #,  java.util.logging.FileHandler

#default file output is in user's home directory.
#java.util.logging.FileHandler.pattern = /mnt/sdcard/csr/logs/test.log
#java.util.logging.FileHandler.limit = 5000000
#java.util.logging.FileHandler.count = 5
#java.util.logging.FileHandler.append = true
java.util.logging.FileHandler.level = INFO
#java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter


# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers. For any given facility this global level
# can be overriden by a facility-specific level.
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.

    .level= FINE

# Limit the messages that are printed on the console to INFO and above.

    #java.util.logging.ConsoleHandler.level = FINE
    #java.util.logging.ConsoleHandler.formatter =  java.util.logging.SimpleFormatter

# The logger with javax.jms.connection name space will write
# Level.INFO messages to its output handler(s). In this configuration
# the ouput handler is set to java.util.logging.ConsoleHandler.

#com.android.internal.logging.AndroidHandler.level = FINE
#com.android.internal.logging.AndroidHandler.formatter = java.util.logging.SimpleFormatter


/*
 * Copyright (c) 2015-2017 Koninklijke Philips N.V.
 * All rights reserved.
 */

buildscript { bs ->
    apply from: rootDir.absolutePath + '/../common/gradle/project-build.gradle', to: bs
    apply from: rootDir.absolutePath + '/../common/gradle/module.gradle'
    repositories {
        maven {
            url repos.jcenter
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
    }

    repositories {
        maven {
            url repos.jcenter
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven {
            url repos.plugin
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
    }

    dependencies {
        classpath(builddeps.buildinfoextractor)
        classpath(builddeps.cdpscm)
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

apply from: rootDir.absolutePath + '/../common/gradle/module-tasks.gradle'

def environment = 'production'
if (project.hasProperty('envCode')) {
    environment = envCode
}

apply plugin: 'cdpSCM'
import com.philips.cdp.cdpSCM

def objcdp = new cdpSCM()
objcdp.setProjectDir(projectDir)
objcdp.setEnv(platform: 'android', env: environment)
archivesBaseName = rootProject.name

version = objcdp.getVersion()

repositories {
    maven {
        url repos.jcenter
        credentials {
            username = "readonly"
            password = "123qweasdzxc"
        }
    }
    maven {
        url objcdp.getArtifactoryUrl()
        credentials {
            username = "readonly"
            password = "123qweasdzxc"
        }
    }
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        minSdkVersion versions.minsdk
        targetSdkVersion versions.sdk

        applicationId "com.philips.cdp.dicommclientsample"
        testApplicationId "com.philips.cdp.dicommclient"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE'
        exclude 'NOTICE'
        exclude 'asm-license.txt'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    def commlib = findProject(':commlib') ? ':commlib' : ':dicommClientLib'

    debugCompile project(path: commlib, configuration: 'debug')
    releaseCompile project(path: commlib, configuration: 'release')

    if (findProject(':cloudcontroller')) {
        debugCompile project(path: ':cloudcontroller', configuration: 'debug')
        releaseCompile project(path: ':cloudcontroller', configuration: 'release')
    } else {
        compile(group: 'com.philips.cdp', name: 'cloudcontroller', version: versions.cloudcontroller + objcdp.getVersionSuffix(), ext: 'aar', changing: true)
    }

    compile deps.support.appcompatv7
    compile deps.support.design
    compile deps.joda_time
}

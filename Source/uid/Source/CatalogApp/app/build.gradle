/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.application'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/projectnames.gradle'

buildscript {
    apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'

    dependencies {
        classpath builddeps.gradle
        classpath builddeps.buildinfoextractor
        classpath builddeps.cdpSCM
    }
}

archivesBaseName = "uidApp"
group = 'com.philips.cdp'

artifactory {
    contextUrl = objcdp.getArtifactoryContextUrl()
    publish {
        repository {
            repoKey = objcdp.getArtifactoryPublishRepoKey()
            username = objcdp.getArtifactoryUploadUser()
            password = objcdp.getArtifactoryUploadPwd()
            defaults {
                publishPom = true
                publishIvy = false
                publishBuildInfo = true
                publishArtifacts = true
                publications('apk')
                properties = ['git.commitid': objcdp.getCommitHashLong()]
            }
        }
    }
    resolve {
        repository {
            repoKey = objcdp.getArtifactoryResolveRepoKey()
        }
    }
    clientConfig.timeout = 600
    // Artifactory connection timeout (in seconds). The default timeout is 300 seconds.
}

publishing {
    publications {
        apk(MavenPublication) {
            groupId group
            version = version
            artifactId archivesBaseName

            artifact("$buildDir/outputs/apk/release/${archivesBaseName}-release.apk")

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                def resolvedArtifacts = configurations.implementation.allDependencies
                resolvedArtifacts.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        applicationId "com.philips.platform.catalogapp"
        versionCode 1
        versionName version
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    dataBinding.enabled = true

    signingConfigs {
        TestPhilipsStore {
            keyAlias 'philips'
            keyPassword 'philips'
            storeFile file("${projectDir}/../extra/signing/UIT_GoogleBeta_KeyStore.jks")
            storePassword 'philips'
        }
        debug {
            storeFile file("${projectDir}/../extra/signing/debug.keystore")
        }
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            signingConfig signingConfigs.TestPhilipsStore
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'asm-license.txt'
        exclude 'LICENSE.txt'

    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jvmArgs '-noverify'
        }
    }
}

dependencies {
    implementation project(strings.uid.projectName)
    
    implementation deps.greenrobot
    implementation deps.support.design
    implementation deps.glide
    implementation deps.calligraphy

    annotationProcessor deps.butterknife_compiler

    implementation(deps.support.recyclerview) {
        exclude module: "com.android.support"
    }
    implementation(deps.support.appcompatv7) {
        exclude module: "com.android.support"
    }
    implementation(deps.butterknife) {
        exclude module: "com.android.support"
    }
    implementation(deps.butterknife_compiler) {
        exclude module: "com.android.support"
    }
    testImplementation(deps.junit) {
        exclude module: "com.android.support"
        exclude module: "support-annotations"
    }
    androidTestImplementation(deps.espresso_core) {
        exclude module: "com.android.support"
        exclude module: "support-annotations"
    }
    androidTestImplementation(deps.androidx_test.runner) {
        exclude module: "com.android.support"
        exclude module: "support-annotations"
    }
    androidTestImplementation(deps.androidx_test.rules) {
        exclude module: "com.android.support"
        exclude module: "support-annotations"
    }
    androidTestImplementation deps.apache_commons_lang
}
/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.library'
apply plugin: 'pl.droidsonroids.pitest'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/lib.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/tasks.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/androidtest.gradle'

archivesBaseName = "dataServicesUApp"

buildscript {
    dependencies {
        classpath builddeps.pitest
    }
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        multiDexEnabled true
        minSdkVersion versions.minsdk
        targetSdkVersion versions.target
        versionCode 1
        versionName version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                'appAuthRedirectScheme': 'com.googleusercontent.apps.346000571262-m5u27lu130n1h1i2vbsggo34ae6nr1hp'
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
        }
    }
}

dependencies {
    if (directdependencies) {
        implementation project(':AppInfra')
        implementation project(':uAppFwLib')
        implementation project(':uid')
        implementation project(':pif')
        implementation project(':catk')
        implementation project(':jump')
        implementation project(':registrationApi')
        implementation project(':securedblibrary')
        implementation project(':dataServices')
        implementation project(':csw')
    } else {
        implementation philipsdeps.AppInfra
        implementation philipsdeps.uAppFwLib
        implementation philipsdeps.uid
        implementation philipsdeps.pif
        implementation philipsdeps.catk
        implementation philipsdeps.jump
        implementation philipsdeps.registrationApi
        implementation philipsdeps.securedblibrary
        implementation philipsdeps.dataServices
        implementation philipsdeps.csw
    }

    implementation deps.support.appcompatv7
    implementation deps.ormlite.core
    implementation deps.ormlite.android
    implementation deps.support.recyclerview
    implementation deps.support.appcompatv7
    implementation deps.support.supportv4
    implementation deps.sqlcipher
    implementation deps.gson
    implementation deps.joda_time
    implementation deps.javax_inject
    implementation deps.javax_annotation
    implementation deps.support.design

    // Test Compile
    testImplementation deps.junit
    testImplementation deps.mockito
    testImplementation deps.powermock_api_mockito
    testImplementation deps.jackson_core
    testImplementation deps.jackson_databind

    testImplementation deps.robolectric
    testImplementation deps.robolectric_shadows
    testImplementation deps.commons_io

    androidTestImplementation(deps.espresso_core) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

pitest {
    targetClasses = ['com.philips.platform.dscdemo.*']  //by default "${project.group}.*"
    pitestVersion = '1.1.0' //not needed when a default PIT version should be used
    threads = 1
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    excludedClasses = []
}

tasks.withType(Test) {
    ignoreFailures = true
}
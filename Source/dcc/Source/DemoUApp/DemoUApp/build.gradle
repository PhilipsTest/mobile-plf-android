/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.library'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/projectnames.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/lib.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/zipdocs.gradle'

archivesBaseName = strings.dccuapp.artifactName

buildscript {
    apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'

    dependencies {
        classpath builddeps.gradle
        classpath builddeps.buildinfoextractor
        //classpath builddeps.cdpSCM
    }
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        versionCode 1
        versionName version
        multiDexEnabled true
        manifestPlaceholders = ['appAuthRedirectScheme': 'com.googleusercontent.apps.346000571262-m5u27lu130n1h1i2vbsggo34ae6nr1hp']
        minSdkVersion versions.mins
        targetSdkVersion versions.target
    }

    packagingOptions {
        pickFirst 'META-INF/LICENSE'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.design
    implementation philipsdeps.uid
    if (useprojectdependencies) {
        implementation project(strings.ufw.projectName)
        implementation project(strings.ail.projectName)
        implementation project(strings.prx.projectName)
        implementation project(strings.pse.projectName)
    } else {
        implementation philipsdeps.uAppFwLib
        implementation philipsdeps.AppInfra
        implementation philipsdeps.prx
        implementation philipsdeps.productselection
    }

    implementation deps.androidx.recyclerview
    implementation deps.androidx.appcompat
    implementation deps.calligraphy
    implementation deps.viewpump

    implementation project(strings.dcc.projectName)
}

tasks.withType(Test) {
    ignoreFailures = true
}
/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.library'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/projectnames.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/lib.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/taskscc.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/zipdocs.gradle'

archivesBaseName = strings.udi.artifactName

buildscript {
    apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'

    dependencies {
        classpath builddeps.gradle
        classpath builddeps.buildinfoextractor
    }
}

//=======To zip and upload "Documents/External" ==STARTS=============
def zipDoc = file(buildDir.name + "/distributions/$project.name-$version-docs" + '.zip')
artifacts {
    archives zipDoc
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        versionCode 1
        versionName version
        multiDexEnabled true
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'com.philips.apps.9317be6b-193f-4187-9ec2-5e1802a8d8ad'
        ]
    }

    buildTypes {
        release {
            proguardFiles 'proguard-rules-udi.pro'
        }
        debug {
            debuggable true
            testCoverageEnabled = true
        }
    }
}

apply from: project.rootDir.absolutePath + '/build-support/gradle/apidocs.gradle'

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    if (useprojectdependencies) {

        implementation project(strings.ufw.projectName)
        implementation project(strings.ail.projectName)
    } else {
        implementation philipsdeps.uAppFwLib
    }
    annotationProcessor deps.dagger.compiler
    implementation project(strings.ufw.projectName)
    implementation deps.calligraphy
    implementation deps.constraintlayout
    implementation deps.support.appcompatv7
    implementation deps.support.design
    implementation deps.support.supportv4
    implementation deps.support.annotations
    implementation deps.dagger.dagger
    implementation philipsdeps.uid
    implementation deps.support.recyclerview
    testImplementation deps.junit
    implementation deps.adobemobilelib
    implementation deps.openid_appauth
    implementation deps.rxjava2

    androidTestImplementation deps.androidx_test.runner
    androidTestImplementation deps.mockito_android
    androidTestImplementation deps.espresso_core, {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

tasks.withType(Test) {
    ignoreFailures = true
}
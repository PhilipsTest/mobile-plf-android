apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'

archivesBaseName = "uAppFwLibUApp"

def support_version = versions.support
buildscript {
    apply from: projectDir.absolutePath + '/../../../../build-support/gradle/versions.gradle'

    repositories {
        maven {
            url repos.jcenter
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven {
            url repos.plugin
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
    }

    dependencies {
        classpath builddeps.gradle
        classpath builddeps.buildinfoextractor
    }
}

allprojects {
    repositories {
        maven {
            url repos.plugin
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven {
            url objcdp.getArtifactoryUrl()
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }

        apply plugin: 'com.jfrog.artifactory'
        group = 'com.philips.cdp'

        flatDir {
            dirs 'libs'
        }
    }
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {

        minSdkVersion versions.minsdk
        targetSdkVersion versions.target
        versionCode 1
        versionName version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.calligraphy
    implementation deps.support.annotations
    implementation deps.shamanland_fonticon
    implementation deps.support.cardview
    implementation deps.support.recyclerview
    implementation deps.multidex
    implementation deps.support.appcompatv7
    implementation deps.support.design
    implementation deps.gson

    def dp = project.ext.has('useprojectdependencies')

    if(dp) {
        implementation project(':uikitLib')
        implementation project(':uAppFwLib')
        implementation project(':AppInfra')
        implementation project(':uid')
    } else {
        implementation (philipsdeps.uikitLib) {
            exclude group: 'com.android.support'
        }
        implementation philipsdeps.uAppFwLib
    }
}

tasks.withType(Test) {
  ignoreFailures = true
}
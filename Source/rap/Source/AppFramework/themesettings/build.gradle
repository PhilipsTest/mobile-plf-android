apply plugin: 'com.android.library'

apply from: "../scripts/versions.gradle"
apply from: projectDir.absolutePath + '/../../../../../build-support/gradle/cdpscm.gradle'
apply from: projectDir.absolutePath + '/../../../../../build-support/gradle/lib.gradle'
apply from: projectDir.absolutePath + '/../../../../../build-support/gradle/versions.gradle'

def environment = 'production'
if (project.hasProperty('envCode')) {
    environment = envCode
}

apply plugin: 'cdpSCM'
import com.philips.cdp.cdpSCM
def objcdp = new cdpSCM()
objcdp.setProjectDir(projectDir)
objcdp.setEnv(platform: 'android', env: environment )


android {
    compileSdkVersion config.targetSdk
    buildToolsVersion config.buildTools

    defaultConfig {
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode 1
        versionName version

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles "proguard-rules.pro"
        }
        debug {
            testCoverageEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    compile "com.android.support:appcompat-v7:${versionsAndroid.support}"

    compile "com.android.support:recyclerview-v7:${versionsAndroid.support}"

    def dp = project.ext.has('useprojectdependencies')

    if(dp) {
        compile project(':uid')
    } else {
        compile(group: 'com.philips.cdp', name: 'uid', version: versions.uid_uid + objcdp.getVersionSuffix(), ext: 'aar', changing: true) {
            exclude group: 'com.android.support'
            transitive = true
        }
    }

    testCompile "junit:junit:${versionsExternal.junit}"
    testCompile "org.robolectric:robolectric:${versionsExternal.robolectric}"
    testCompile "org.robolectric:shadows-support-v4:${versionsExternal.robolectricSupport}"

}

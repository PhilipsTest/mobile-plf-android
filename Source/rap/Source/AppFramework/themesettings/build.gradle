apply plugin: 'com.android.library'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'

buildscript {
    dependencies {
        classpath builddeps.buildinfoextractor
    }
}

def environment = 'production'
if (project.hasProperty('envCode')) {
    environment = envCode
}

apply plugin: 'cdpSCM'
import com.philips.cdp.cdpSCM
def objcdp = new cdpSCM()
objcdp.setProjectDir(projectDir)
objcdp.setEnv(platform: 'android', env: environment )

allprojects {
    repositories {
        maven {
            url repos.plugin
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven {
            url objcdp.getArtifactoryUrl()
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }

        apply plugin: 'com.jfrog.artifactory'
        group = 'com.philips.cdp'
    }
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        minSdkVersion versions.minsdk
        targetSdkVersion versions.target
        versionCode 1
        versionName version

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles "proguard-rules.pro"
        }
        debug {
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }


}

dependencies {

    implementation deps.support.appcompatv7

    implementation deps.support.recyclerview

    if (directdependencies) {
        implementation project(':uid')
    } else {
        implementation philipsdeps.uid
    }

    testImplementation deps.junit
    testImplementation deps.robolectric
    testImplementation deps.robolectric_shadows

}
tasks.withType(Test) {
    ignoreFailures = true
}
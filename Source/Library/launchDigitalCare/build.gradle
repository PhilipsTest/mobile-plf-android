apply plugin: 'com.android.application'
apply from: '../extra/calabash.gradle'

repositories {
    maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/ext-release-local' }
    maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/libs-stage-local-android' }
    maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/libs-release-local-android' }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.philips.cdp.sampledigitalcareapp"
        minSdkVersion 15
        targetSdkVersion 23
        renderscriptTargetApi 23
        renderscriptSupportModeEnabled true
        generatedDensities = []
        multiDexEnabled true
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            proguardFile 'proguard.pro'
        }
        debug {
            proguardFile 'proguard.pro'
        }
    }

    productFlavors {
        simulator {
            applicationId 'com.philips.cdp.sampledigitalcareapp'
            versionCode 139
            versionName "4.1.0"
        }
        device {
            applicationId 'com.philips.cdp.sampledigitalcareapp'
            versionCode 139
            versionName "4.1.0"
        }
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
}

calabash {
    calabashPath "../TestAutomation"
}

dependencies {
    compile project(':digitalCare')
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.philips.cdp:uikitLib:3.0.0'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
    compile 'com.shamanland:fonticon:0.1.8'
    compile(group: 'com.philips.cdp', name: 'Tagging', version: '2.0.0', ext: 'aar')
}

task findbugs(type: FindBugs, dependsOn: assembleDebug) {

    description 'Run findbugs'
    group 'verification'
    ignoreFailures = true
    classes = fileTree('build/intermediates/classes/simulator/debug')
    source = fileTree('src/main/java')
    classpath = files()

    effort = 'max'

    excludeFilter = file("findbugs-exclude.xml")

    reports {
        xml.enabled = true
        html.enabled = false
    }
}

task pmd(type: Pmd, dependsOn: assembleDebug) {

    description 'Run pmd'
    group 'verification'
    ignoreFailures = true
    ruleSets = ["rules/basic.xml", "rules/android.xml", "rules/empty.xml", "rules/imports.xml", "rules/unnecessary.xml", "rules/unusedcode.xml"]
    source = fileTree('src/main/java')

    reports {
        xml.enabled = true
        html.enabled = false
    }
}



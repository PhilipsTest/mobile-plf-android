apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

buildscript {
    repositories {
        maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/jcenter' }
        maven {
            url "http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/plugins-release-local"
            credentials {
                username = "readonly"
                password = "readonly"
            }
        }
    }
    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.4.12'
        classpath group: 'com.philips.cdp', name: 'cdpSCM', version: '2.1.0', changing: true
    }
}

def environment = 'production'
if (project.hasProperty('envCode')) {
    environment = envCode
}

apply plugin: 'cdpSCM'
import com.philips.cdp.cdpSCM
def objcdp = new cdpSCM()
objcdp.setProjectDir(projectDir)
objcdp.setEnv(platform: 'android', env: environment )
archivesBaseName = "coppa"

repositories {
    maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/ext-release-local' }
    maven { url objcdp.getArtifactoryUrl() }
}

group = 'com.philips.cdp'
def libVersionNumber = new File('../../VERSION_COPPA').text.trim()
if(objcdp.getWorkingBranch().startsWith('master')) {
    libVersionNumber = libVersionNumber.replaceAll('-SNAPSHOT', '')
} else if(objcdp.getWorkingBranch().startsWith('release')) {
    libVersionNumber = libVersionNumber.replaceAll('-SNAPSHOT', '-rc.' + objcdp.getTimeStamp())
} else {
    libVersionNumber = libVersionNumber.replaceAll('-SNAPSHOT', '-SNAPSHOT.' + objcdp.getTimeStamp())
}
version = libVersionNumber

artifactory {
    contextUrl = objcdp.getArtifactoryContextUrl()
    publish {
        repository {
            repoKey = objcdp.getArtifactoryPublishRepoKey()
            username = objcdp.getArtifactoryUploadUser()
            password = objcdp.getArtifactoryUploadPwd()
            defaults {
                publishPom = true
                publishIvy = false
                publishBuildInfo = true
                publishArtifacts = true
                publications ('aar')
            }
        }
    }
    resolve {
        repository {
            repoKey = objcdp.getArtifactoryResolveRepoKey()
        }
    }
    clientConfig.timeout = 600 // Artifactory connection timeout (in seconds). The default timeout is 300 seconds.
}

publishing {
    publications {
        aar(MavenPublication) {
            groupId group
            version = version
            artifactId archivesBaseName

            /* if (new File("$buildDir/outputs/aar/${archivesBaseName}-release.aar").exists()) {
                artifact("$buildDir/outputs/aar/${archivesBaseName}-release.aar")
            } else if (new File("$buildDir/outputs/aar/${archivesBaseName}-release-unsigned.aar").exists()) {
                artifact("$buildDir/outputs/aar/${archivesBaseName}-release-unsigned.aar")
            } else if (new File("$buildDir/outputs/aar/${archivesBaseName}-debug.aar").exists()) {
                artifact("$buildDir/outputs/aar/${archivesBaseName}-debug.aar")
            } else {
            } */

            artifact("$buildDir/outputs/aar/${archivesBaseName}-release.aar")

            pom.withXml{
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.moduleGroup)
                    dependencyNode.appendNode('artifactId', it.moduleName)
                    dependencyNode.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 24
        versionCode 1
        versionName version
        testApplicationId "com.philips.cdp.registration.coppa.test"
        multiDexEnabled true
        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"

        // replace the below string with your own Google client ID. Make sure this is consistent
        // with the values used in openid_appauth_idp_configs.xml
        manifestPlaceholders = [
                'appAuthRedirectScheme': 'com.googleusercontent.apps.346000571262-m5u27lu130n1h1i2vbsggo34ae6nr1hp'
        ]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            testCoverageEnabled false
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'org.mockito:mockito-core:2.0.106-beta'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    compile(group: 'org.apache.http.legacy', name: 'org.apache.http.legacy', version: '1.0.0')
    compile project(':RegistrationApi')
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:multidex:1.0.1'
}

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply from: 'build-awsdk-dependencies.gradle'
apply plugin: 'de.mobilej.unmock'

buildscript {
    repositories {

        maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/jcenter' }
        maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/libs-snapshot-local-android'}

        maven {
            url "http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/plugins-release-local"
            credentials {
                username = "readonly"
                password = "readonly"
            }
        }
        maven {
            url 'http://artifactory-ehv.ta.philips.com:8082/artifactory/platform-jcenter-remote'
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
    }

    dependencies {
        classpath 'com.trickyandroid:jacoco-everywhere:0.2.1'
        classpath 'com.android.tools.build:gradle:2.3.1'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.4.12"
        classpath group: 'com.philips.cdp', name: 'cdpSCM', version: '2.1.0', changing: true
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath 'de.mobilej.unmock:UnMockPlugin:0.6.2'
    }
}


def environment = 'production'
if (project.hasProperty('envCode')) {
    environment = envCode
}

apply plugin: 'cdpSCM'
import com.philips.cdp.cdpSCM
def objcdp = new cdpSCM()
objcdp.setProjectDir(projectDir)
objcdp.setEnv(platform: 'android', env: environment )
archivesBaseName = project.name


allprojects {
    repositories {
        maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/ext-release-local' }
        maven { url objcdp.getArtifactoryUrl() }
        apply plugin: 'com.jfrog.artifactory'
        group = 'com.philips.cdp'
        maven {
            url 'http://artifactory-ehv.ta.philips.com:8082/artifactory/platform-jcenter-remote'
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://mvnrepository.com/artifact/org.robolectric/shadows-core" }
        maven {
            url 'http://artifactory-ehv.ta.philips.com:8082/artifactory/platform-pkgs-android-snapshot'
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven {
            url "http://artifactory-ehv.ta.philips.com:8082/artifactory/platform-plugins-release-local"
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
    }
}

group = 'com.philips.cdp'
version = objcdp.getVersion()

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary = true
        renderscriptTargetApi 25
        renderscriptSupportModeEnabled true
        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"
        multiDexEnabled true

        manifestPlaceholders = [
                'appAuthRedirectScheme': 'com.googleusercontent.apps.346000571262-arpks5qhm771a2mfbm4e829va12olmtf'
        ]

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

unMock {
    keep "android.os.Bundle"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:25.3.1'
    testCompile 'junit:junit:4.12'
    compile(group: 'com.philips.cdp', name: 'AppInfra', version: '1.6.0' + objcdp.getVersionSuffix(), ext: 'aar') {
        exclude group: 'com.android.support'
        transitive = true
    }

    compile(group: 'com.philips.cdp', name: 'uid', version: '0.1.1' + objcdp.getVersionSuffix(), ext: 'aar', changing: true){
        exclude group: 'com.android.support'
        transitive = true
    }

    compile(group: 'com.philips.cdp', name: 'commlib-all', version: '1.3.1' + objcdp.getVersionSuffix(), ext: 'aar') {
        exclude group: 'com.android.support'
        transitive = true
    }
//    compile(group: 'com.philips.cdp', name: 'uAppFwLib', version: '1.5.0' + objcdp.getVersionSuffix(), ext: 'aar') {
//        exclude group: 'com.android.support'
//        transitive = true
//    }
    compile(group: 'com.philips.cdp', name: 'registrationApi', version: '10.1.0' + objcdp.getVersionSuffix(), ext: 'aar') {
            exclude group: 'com.android.support'
            transitive = true
    }

    compile 'com.android.support:support-fragment:25.3.1'
    compile(group: 'com.philips.cdp', name: 'cloudcontroller', version: '5.1.4' + objcdp.getVersionSuffix(), ext: 'aar', changing: true)
    compile project(':awsdk')
    testCompile 'org.mockito:mockito-all:1.10.17'
    testCompile 'com.squareup.assertj:assertj-android:1.1.1'
    testCompile ('org.robolectric:robolectric:3.4-rc2'){
        exclude module: 'commons-logging'
        exclude module: 'support-v4'
        }
    testCompile "org.robolectric:shadows-support-v4:3.3.2"
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'
    compile 'com.google.android.gms:play-services-maps:10.2.4'
    compile 'com.google.android.gms:play-services-location:10.2.4'
    compile 'com.google.guava:guava:20.0'
    unmock 'org.robolectric:android-all:4.3_r2-robolectric-0'
}
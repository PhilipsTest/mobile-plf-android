apply plugin: 'com.android.application'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'com.jfrog.artifactory-upload'

buildscript {
    repositories {
        maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/jcenter' }
        maven {
            url "http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/libs-release-local-android"
            credentials {
                username = "readonly"
                password = "readonly"
            }
        }
    }
    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.2'
        classpath group: 'com.philips.cdp', name: 'cdpSCM', version: '0.1.0', changing: true
    }
}

repositories {
    maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/ext-release-local' }
    maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/libs-release-local-android' }
}

dependencies {
}

apply plugin: 'cdpSCM'
import com.philips.cdp.cdpSCM
def objcdp = new cdpSCM()
objcdp.setProjectDir(projectDir)

android {

    signingConfigs {
        debug {
            storeFile file('keystore.jks')
            storePassword 'password'
            keyAlias 'weChatDebug'
            keyPassword 'password'
        }
        release {
            storeFile file('keystore.jks')
            storePassword 'password'
            keyAlias 'weChatDebug'
            keyPassword 'password'
        }
    }

  /*  signingConfigs {
        release
    }*/
    compileSdkVersion 24
    buildToolsVersion "24.0.3"


    defaultConfig {
        //applicationId "com.janrainphilips.philipsregistration"
        minSdkVersion 19
        targetSdkVersion 24

        testApplicationId "com.philips.cdp.registration.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }



    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    buildTypes {
        release {
           // minifyEnabled true
            signingConfig signingConfigs.release
            proguardFile 'proguard-rules.pro'
        }

        debug {
           // minifyEnabled true
            debuggable true
            signingConfig signingConfigs.debug
            testCoverageEnabled true
            proguardFile 'proguard-rules.pro'

        }
    }

    productFlavors {
        /*simulator {
            applicationId 'com.philips.cdp.registration'
            versionCode 5
            versionName objcdp.getVersionWithHash()
        }*/
        device {
           // applicationId 'com.janrainphilips.philipsregistration'
            versionCode 5
            versionName objcdp.getVersionWithHash()
        }
    }
}

group = 'com.philips.cdp'
version = objcdp.getVersion()


repositories { flatDir { dirs 'libs' } }
dependencies {

    compile project(':registrationApi')
    compile project(':HockeySDK-3.0.2')
}




apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory-upload'

def libVersionNumber = new File('../../VERSION').text.trim()
libVersionNumber = libVersionNumber.replaceAll('-SNAPSHOT', '')

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1'
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 2
        versionName libVersionNumber
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources true
            testCoverageEnabled true
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.1.0'
    compile 'com.philips.cdp:uikitLib:1.0.0'
    compile 'com.shamanland:fonticon:0.1.8'
    compile 'com.mcxiaoke.volley:library:1.0.17'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.9.5'
    compile 'com.google.code.gson:gson:2.2.4'
    compile project(':prx-v1')
}
allprojects {
    repositories {
        maven {
            url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/libs-release-local'
        }
    }
}

//maven configuration stuff required for artifactory plugin
group = 'com.philips.cdp'
version = libVersionNumber

artifactory {
    contextUrl = 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory'
    publish {
        repository {
            repoKey = 'libs-snapshot-local-android'
            username = 'admin'
            password = 'password'
            publishPom = true
            publishIvy = false
            publishBuildInfo = false
        }
    }
    resolve {
        repository {
            repoKey = 'libs-release-local'
        }
    }
}


sourceSets {
    main {
        java {
            srcDirs '../../Source/Hor-productselection-android/app/src/main/java'
        }
        resources {

            srcDirs '../../Source/Hor-productselection-android/app/src/main/res'
        }
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    // from('../../Source/SampleDigitalCare/launchDigitalCare/src/main/res')
    classifier 'sources'
}

artifactoryPublish {
    dependsOn sourceJar
}

artifacts {
    archives sourceJar
}


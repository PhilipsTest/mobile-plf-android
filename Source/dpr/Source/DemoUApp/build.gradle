apply plugin: 'com.android.library'
apply plugin: 'findbugs'
apply plugin: 'pmd'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/lib.gradle'

archivesBaseName = "devicepairingUApp"
version = objcdp.getVersion(versions.dpr_devicePairing)

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        minSdkVersion versions.minsdk
        targetSdkVersion versions.target
        versionCode 1
        versionName version + "(" + objcdp.getCommitHash() + ")"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [
                'appAuthRedirectScheme': 'com.googleusercontent.apps.346000571262-m5u27lu130n1h1i2vbsggo34ae6nr1hp'
        ]

    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            testCoverageEnabled false
        }
    }

}

dependencies {

    def suffix = objcdp.getVersionSuffix()

    for (dep in [':registrationApi', ':uAppFwLib', ':commlib', ':dataServicesUApp', ':cloudcontroller']) {
        if (directdependencies) {
            compile project(path: dep)
        } else {
            compile("$group$dep:$platformversion$suffix") { changing = true }
        }
    }

    compile deps.support.fragment
    compile deps.support.appcompatv7
    compile deps.support.design

    compile deps.constraintlayout

    compile deps.multidex
    compile deps.ormlite.core
    compile deps.ormlite.android

    testCompile deps.junit

    androidTestCompile(deps.espresso_core) {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.dagger'
    }
}
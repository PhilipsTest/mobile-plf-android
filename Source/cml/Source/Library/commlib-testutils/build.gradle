/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.library'
apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'

buildscript {
    apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'

    dependencies {
        classpath(builddeps.buildinfoextractor)
        classpath builddeps.cdpSCM
    }
}

archivesBaseName = "commlib-testutils"
group = 'com.philips.cdp'

def zipDoc = file(buildDir.name + "/distributions/$project.name-$version-docs" + '.zip')
artifacts {
    archives zipDoc
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        multiDexEnabled true
        minSdkVersion versions.minsdk
        targetSdkVersion versions.target
        versionCode 1
        versionName version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        all {
            buildConfigField "int", "minsdk", Integer.toString(versions.minsdk)
            buildConfigField "int", "maxsdk", Integer.toString(versions.target)
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation deps.junit
    implementation deps.mockito

    implementation deps.robolectric
    implementation deps.robolectric_shadows
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
}

/**
 * Zips external documentation to be included with a release
 */
task zipDocuments(type: Zip) {
    from files(projectDir.toString() + "/../../../Documents/External/") {
        baseName = project.name
        classifier 'docs'
    }
}

/**
 * Creates sources.jar for easier debugging
 */
task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

tasks.withType(Test) {
    ignoreFailures = true
}
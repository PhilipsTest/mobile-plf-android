/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.application'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/lib.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/zipdocs.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/tasks.gradle'

archivesBaseName = "commlib-integration-tests"

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        multiDexEnabled true
        minSdkVersion versions.minsdk
        targetSdkVersion versions.target

        applicationId "com.philips.cdp2.commlib.devicetest"
        versionCode 1
        versionName "0.0.1"

        testInstrumentationRunner "com.philips.cdp2.commlib.devicetest.runner.CucumberRunner"
    }

    buildTypes {
        debug {
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude '**/LICENSE'
        exclude 'META-INF/*'
        exclude 'META-INF/**/*'
        exclude '**/*.TXT'
        exclude '**/*.xml'
        pickFirst '**/*.properties'
        pickFirst '**/ErrorMessages*.txt'
    }
}

dependencies {
    compileOnly deps.support.annotations

    implementation deps.multidex

    implementation project(':commlib')
    implementation project(':AppInfra')
    implementation project(':commlib-api')
    implementation project(':commlib-ble')
    implementation project(':commlib-lan')
    implementation project(':commlib-cloud')
    implementation project(':cloudcontroller')
    implementation project(':cloudcontroller-api')
    implementation deps.gson

    testImplementation project(':bluelib')
    testImplementation project(':commlib-testutils')
    testImplementation deps.junit
    testImplementation deps.support.annotations
    testImplementation deps.mockito
    testImplementation deps.powermock_junit
    testImplementation deps.powermock_api_mockito
    testImplementation deps.cucumber
    testImplementation deps.cucumber_junit

    androidTestImplementation project(':bluelib')
    androidTestImplementation project(':commlib-testutils')
    androidTestImplementation deps.mockito
    androidTestImplementation deps.assertj
    androidTestImplementation deps.junit
    androidTestImplementation(deps.android_testrunner) {
        exclude module: 'support-annotations'
    }
    androidTestImplementation(deps.android_testrunner) {
        exclude module: 'support-annotations'
    }
    androidTestImplementation deps.cucumber
    androidTestImplementation deps.cucumber_junit
    androidTestImplementation deps.dexmaker_google

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
}

//project.gradle.buildFinished { buildResult ->
//    project.gradle.getStartParameter().taskRequests.get(0).args.each { String argument ->
//        //If the gradle arguments contains 'assembleDebugAndroidTest' for this project, then pre-install APK with permissions.
//        if (argument == ":$project.name:assembleDebugAndroidTest") {
//            println("Installing build app with right permissions..")
//
//            def absolutePath = file('.')
//            def stdout = new ByteArrayOutputStream()
//
//            exec {
//                def rootDir = project.rootDir
//                def localProperties = new File(rootDir, "local.properties")
//                if (localProperties.exists()) {
//                    Properties properties = new Properties()
//                    localProperties.withInputStream { instr ->
//                        properties.load(instr)
//                    }
//
//                    def sdkDir = properties.getProperty('sdk.dir')
//                    def packageName = "com.philips.cdp2.commlib.devicetest"
//                    def apk_name = "commlib-integration-tests-debug"
//
//                    commandLine "$absolutePath/install_with_permissions.sh", sdkDir, packageName, apk_name
//                }
//            }
//
//            print stdout
//        }
//    }
//}

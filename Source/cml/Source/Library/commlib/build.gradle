/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.library'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/projectnames.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/lib.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/zipdocs.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/tasks.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/androidtest.gradle'

archivesBaseName = strings.cml.artifactName

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        multiDexEnabled true
        minSdkVersion versions.minsdk
        targetSdkVersion versions.target
        versionCode 1
        versionName version
        buildConfigField "String", "TLA", "\"cml\""
    }

    buildTypes {
        debug {
            buildConfigField "String", "LIBRARY_VERSION", "\"${version}(${objcdp.getCommitHash()})\""
        }
        release {
            consumerProguardFiles 'proguard-rules.pro'
            buildConfigField "String", "LIBRARY_VERSION", "\"${version}\""
        }
    }
}

dependencies {
    compileOnly deps.support.annotations

    if (directdependencies) {
        implementation project(strings.cmlble.projectName)
        implementation project(strings.ccl.projectName)
        implementation project(strings.cmllan.projectName)
    } else {
        implementation philipsdeps.commlib_ble
        implementation philipsdeps.commlib_cloud
        implementation philipsdeps.commlib_lan
    }

    if (directdependencies) {
        testImplementation project(strings.clc.projectName)
    } else {
        testImplementation philipsdeps.cloudcontroller
    }

    testImplementation project(strings.cmltu.projectName)

    testImplementation deps.powermock_junit
}

tasks.withType(Test) {
    ignoreFailures = true
}
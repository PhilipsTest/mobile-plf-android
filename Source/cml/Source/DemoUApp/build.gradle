/*
 * Copyright (c) 2015-2017 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.library'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/lib.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/zipdocs.gradle'

archivesBaseName = "commlib-demouapp"
version = objcdp.getVersion(versions.cml_commlib)

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        minSdkVersion versions.minsdk
        targetSdkVersion versions.target
        versionCode 1
        versionName version
        buildConfigField "String", "LIBRARY_VERSION", "\"${version}(${objcdp.getCommitHash()})\""
    }
    publishNonDefault true

    buildTypes {
        debug {
            buildConfigField "String", "LIBRARY_VERSION", "\"${version}(${objcdp.getCommitHash()})\""
        }
        release {
            consumerProguardFiles 'proguard-rules.pro'
            buildConfigField "String", "LIBRARY_VERSION", "\"${version}\""
        }
    }

    lintOptions {
        abortOnError false
    }
}

task generateJavadocPublicApi(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("${projectDir}/../../Documents/External/${project.name}-api/")

    include {
        if (it.isDirectory) {
            return true
        }
        return true //it.file.text.contains("* @publicApi")
    }

    options {
        memberLevel = JavadocMemberLevel.PUBLIC
        links("http://docs.oracle.com/javase/7/docs/api/")
        linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference")
        docEncoding = 'UTF-8'
        encoding = 'UTF-8'
        charSet = 'UTF-8'
    }

    failOnError false
}

dependencies {
    testCompile deps.junit
    testCompile deps.assertj
    testCompile deps.mockito

    compile deps.support.design
    compile "com.android.support:cardview-v7:${versions.support}"

    provided deps.support.annotations

    if (directdependencies) {
        compile project(':commlib')
        compile project(':cloudcontroller')
        compile project(':uAppFwLib')
    } else {
        if (findProject(':commlib')) {
            debugCompile project(path: ':commlib', configuration: 'debug')
            releaseCompile project(path: ':commlib', configuration: 'release')
        } else {
            compile(group: 'com.philips.cdp', name: 'commlib', version: versions.cml_commlib + objcdp.getVersionSuffix(), changing: true)
        }

        if (findProject(':cloudcontroller')) {
            debugCompile project(path: ':cloudcontroller', configuration: 'debug')
            releaseCompile project(path: ':cloudcontroller', configuration: 'release')
        } else {
            compile(group: 'com.philips.cdp', name: 'cloudcontroller', version: versions.cml_commlib + objcdp.getVersionSuffix(), changing: true)
        }

        compile(group: 'com.philips.cdp', name: 'uAppFwLib', version: versions.uaf_uAppFwLib + objcdp.getVersionSuffix(), changing: true)
    }

    compile deps.joda_time
}
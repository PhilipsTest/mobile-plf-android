apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

//def libVersionNumber = new File("${projectDir}/../../../VERSION_JUMP").text.trim()

archivesBaseName = "jump"

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/lib.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/zipdocs.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/tasks.gradle'

buildscript {
    apply from: projectDir.absolutePath + '/../../../../../build-support/gradle/versions.gradle'

    repositories {
        google()
        maven {
            url repos.jcenter
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven {
            url repos.releaseexternal
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
            maven { url sonatype }
    }
    dependencies {
        classpath builddeps.gradle
        classpath builddeps.buildinfoextractor
        classpath deps.retrolambda_gradle
        classpath deps.butterknife_gradle
    }
}

allprojects {
    repositories {
        maven {
            url repos.releaseexternal
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
    }
    apply plugin: 'com.jfrog.artifactory'
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        minSdkVersion versions.minsdk
        targetSdkVersion versions.target
        versionName version
        multiDexEnabled true

        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"

        manifestPlaceholders = [
                'appAuthRedirectScheme': 'com.googleusercontent.apps.346000571262-m5u27lu130n1h1i2vbsggo34ae6nr1hp'
        ]

    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules-jump.pro'
        }
        debug {
            debuggable true
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

}

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    def dp = project.ext.has('useprojectdependencies')

    if (dp) {
        implementation project(':AppInfra')
    } else {
        implementation philipsdeps.AppInfra
    }
    annotationProcessor deps.butterknife
    annotationProcessor deps.immutables
    annotationProcessor deps.dagger.compiler

    implementation deps.javax_annotation


    implementation deps.okhttp3
    implementation deps.okhttp_apache3
    implementation deps.squareup_okio
    implementation deps.support.appcompatv7
    implementation deps.wechat

    //WeChat China
//    implementation files('libs/libammsdk.jar')
    implementation deps.apache
    implementation deps.dagger.dagger
    implementation deps.jackson_databind
    implementation deps.multidex
    implementation deps.openid_appauth
    implementation deps.rxjava2

    testImplementation deps.junit
    testImplementation deps.mockito
    testImplementation deps.robolectric

    // JUnit4 Rules
    androidTestImplementation deps.android_testrules
    // Android JUnit Runner
    androidTestImplementation deps.android_testrunner
    androidTestImplementation deps.dexmaker_google
    androidTestImplementation deps.junit
    androidTestImplementation deps.mockito_android
}

task copyToLib(type: Copy) {
    into "$buildDir/outputs/lib"
    from configurations.implementation
}

tasks.withType(Test) {
    ignoreFailures = true
}

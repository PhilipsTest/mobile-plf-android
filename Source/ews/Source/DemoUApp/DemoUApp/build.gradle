apply plugin: 'com.android.library'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'

archivesBaseName = "ewsUApp"

buildscript {
    apply from: projectDir.absolutePath + '/../../../../../build-support/gradle/versions.gradle'

    repositories {
        maven {
            url 'http://artifactory-ehv.ta.philips.com:8082/artifactory/platform-jcenter-remote'
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven {
            url "http://artifactory-ehv.ta.philips.com:8082/artifactory/platform-plugins-release-local"
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
    }

    dependencies {
        classpath builddeps.gradle
        classpath builddeps.buildinfoextractor
        classpath(builddeps.cdpSCM)
    }
}

/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

allprojects {
    repositories {
        maven {
            url "http://artifactory-ehv.ta.philips.com:8082/artifactory/platform-plugins-release-local"
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven {
            url objcdp.getArtifactoryUrl()
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        apply plugin: 'com.jfrog.artifactory'
        group = 'com.philips.cdp'

        flatDir {
            dirs 'libs'
        }
    }
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        multiDexEnabled true
        minSdkVersion versions.minsdk
        targetSdkVersion versions.target
        versionCode getMyVersionCode()
        versionName "1.0"
        consumerProguardFiles('proguard-rules.txt', 'proguard-rules-lib.txt')
    }
    dataBinding {
        enabled = true
    }

    signingConfigs {
        release {
            storeFile file("demoapp-keystore.jks")
            storePassword "philips"
            keyAlias "philips"
            keyPassword "philips"
        }
    }
    buildTypes {
        debug {

        }
        release {

        }
    }
    lintOptions {
        abortOnError false
    }


}

def getMyVersionCode() {
    def buildNumber = project.hasProperty('buildNumber') ? buildNumber.toInteger() : 1
    buildNumber
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // Philips Dependencies
    implementation project(':ews-android')
    implementation project(':uid')
    implementation project(':uAppFwLib')
    implementation project(':AppInfra')
    implementation project(':commlib-api')
    annotationProcessor deps.dagger.compiler

    implementation deps.constraintlayout
    implementation deps.dagger.dagger
    implementation deps.multidex
    implementation deps.calligraphy
    implementation deps.support.animvecdraw
    implementation deps.support.annotations
    implementation deps.support.appcompatv7
    implementation deps.support.design

}
tasks.withType(Test) {
    ignoreFailures = true
}
/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.library'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/projectnames.gradle'

archivesBaseName = strings.pimuapp.artifactName

buildscript {
    apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'

    dependencies {
        classpath builddeps.gradle
        classpath builddeps.buildinfoextractor
    }
}

//=======To zip and upload "Documents/External" ==STARTS=============
def zipDoc = file(buildDir.name + "/distributions/$project.name-$version-docs" + '.zip')
artifacts {
    archives zipDoc
}

task zipDocuments(type: Zip) {
    from files(projectDir.toString() + "/../../Documents/External/") {
        baseName = project.name
        classifier 'docs'
    }
}
//=======To zip and upload "Documents/External" ==ENDS=============

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        versionCode 1
        versionName version
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        renderscriptTargetApi versions.renderscriptTargetApi
        renderscriptSupportModeEnabled true
        manifestPlaceholders = [
                udiRedirectScheme: '',
                appAuthRedirectScheme: ''
        ]
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }

        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'lib/arm64-v8a/librsjni.so'
        exclude 'lib/arm64-v8a/libRSSupport.so'
        exclude 'lib/armeabi-v7a/libblasV8.so'
        exclude 'lib/armeabi-v7a/librsjni.so'
        exclude 'lib/armeabi-v7a/libRSSupport.so'
        exclude 'lib/mips/libblasV8.so'
        exclude 'lib/mips/librsjni.so'
        exclude 'lib/mips/libRSSupport.so'
        exclude 'lib/x86/libblasV8.so'
        exclude 'lib/x86/librsjni.so'
        exclude 'lib/x86/libRSSupport.so'
    }

    lintOptions {
        checkReleaseBuilds false
        disable 'InvalidPackage'
        disable 'GradleCompatible'
        disable 'MissingTranslation'
        disable 'TypographyFractions', 'TypographyQuotes'
        absolutePaths false
        lintConfig file('lint.xml')
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation deps.adobemobilelib
    implementation 'com.google.guava:guava:27.0.1-android'
    implementation deps.libphonenumber
    testImplementation deps.junit
    implementation deps.greenrobot
    implementation philipsdeps.uid
    implementation project(path: ':product-registration-lib')
    implementation project(path: ':prx')
    if (useprojectdependencies) {
        implementation project(strings.pim.projectName)
        implementation project(strings.ufw.projectName)
        implementation project(strings.ail.projectName)
        implementation project(strings.iap.projectName)
        implementation project(strings.pif.projectName)
        implementation project(strings.usr.projectName)
        implementation project(strings.prguapp.projectName)
        implementation project(strings.ecstestuapp.projectName)
        implementation project(strings.mecuapp.projectName)
    } else {
        implementation philipsdeps.uAppFwLib
        implementation philipsdeps.AppInfra
        implementation philipsdeps.pif
        implementation philipsdeps.pim
        implementation philipsdeps.iap
        implementation philipsdeps.registrationApi
        implementation philipsdeps.ecsTestUApp
        implementation philipsdeps.mecUApp
        implementation philipsdeps.product_registration_libUApp
    }
}

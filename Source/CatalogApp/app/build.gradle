apply plugin: 'com.android.application'
apply plugin: 'spoon'
apply plugin: 'jacoco'

spoon {
    className = 'com.philips.cdp.ui.catalogdls.activity.ToggleSwitchTest'
    methodName = 'verifyToggleSwitchOrientationChange'
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "com.philips.platform.catalogapp"
        minSdkVersion 19
        targetSdkVersion 24
        versionCode 1
        versionName "0.1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        generatedDensities = []
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        jenkins {
            testCoverageEnabled true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'asm-license.txt'
        exclude 'LICENSE.txt'

    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

def coverageSourceDirs = ['src/main/java']

task jacocoTestReport(type: JacocoReport, dependsOn: "testJenkinsUnitTest") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(dir: 'build/intermediates/classes/jenkins',
            excludes: ['**/R.class',
                       '**/R$*.class'])

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('build/jacoco/testJenkinsUnitTest.exec')

    doFirst {
        new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }

    reports {
        xml.enabled = false
        html.enabled = true
    }
}

dependencies {

    compile("com.android.support:appcompat-v7:${supportLibraryVer}")
    compile("com.android.support:recyclerview-v7:${supportLibraryVer}")

    compile("com.jakewharton:butterknife:${butterKnifeVer}")


    compile project(':uit')

    compile "org.mockito:mockito-all:${mockitoVer}"
    compile "com.squareup.assertj:assertj-android:${androidAssertJVer}"


    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'

}

configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:24.0.0'
}
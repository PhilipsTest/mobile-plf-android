apply plugin: 'com.android.application'

buildscript {
    repositories {
        maven { url 'http://130.145.245.193:8081/artifactory/jcenter' }

        jcenter()

    }
}

android {
    compileSdkVersion buildSdkVer
    buildToolsVersion "${buildToolsVer}"

    defaultConfig {
        applicationId "com.philips.platform.catalogapp"
        minSdkVersion "${minSdkVer}"
        targetSdkVersion targetSdkVer
        versionCode versionCode
        versionName "${versionName}"

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    signingConfigs {
        TestPhilipsStore {
            keyAlias 'philips'
            keyPassword 'philips'
            storeFile project.rootProject.file('extra/signing/UIT_GoogleBeta_KeyStore.jks')
            storePassword 'philips'
        }
        debug {
            storeFile project.rootProject.file('extra/signing/debug.keystore')
        }
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            signingConfig signingConfigs.TestPhilipsStore
        }

        debug {
            signingConfig signingConfigs.debug
        }
        jenkins {
            testCoverageEnabled true
        }

    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'asm-license.txt'
        exclude 'LICENSE.txt'

    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile("com.android.support:recyclerview-v7:${supportLibraryVer}") {
        exclude module: "com.android.support"
    }
    compile "com.jakewharton:butterknife:${butterKnifeVer}"
    compile project(':uit')
    compile "com.android.support:appcompat-v7:${supportLibraryVer}"
    compile "com.android.support:support-v4:${supportLibraryVer}"
    compile "com.android.support:design:${supportLibraryVer}"
    testCompile "junit:junit:${jUnitVer}"
    testCompile "com.android.support:support-v4:${supportLibraryVer}"
    testCompile("org.robolectric:robolectric:${robolectricVer}")
            {
                exclude module: "com.android.support"
            }
    androidTestCompile("org.powermock:powermock-mockito-release-full:${powerMockitoVer}") {
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
    }
    testCompile "org.powermock:powermock-module-junit4:${powerMockitoJunitVer}"
    testCompile "org.powermock:powermock-api-mockito:${powerMockitoJunitVer}"
    testCompile "org.powermock:powermock-classloading-xstream:${powerMockitoJunitVer}"
    testCompile("org.mockito:mockito-all:${mockitoVer}")
            {
                exclude module: "com.android.support"
            }
    testCompile("com.squareup.assertj:assertj-android:${androidAssertJVer}") {
        exclude module: "com.android.support"
    }
}

/*
 * (c) Koninklijke Philips N.V., 2017.
 *     All rights reserved.
 */
apply plugin: 'com.android.application'

buildscript { bs ->
    apply from: rootDir.absolutePath + '/../common/gradle/project-build.gradle', to: bs
    apply from: rootDir.absolutePath + '/../common/gradle/module.gradle'
    repositories {
        maven { url repos.jcenter }
    }
}

repositories {
    maven { url repos.jcenter }
    maven { url repos.release }
    maven { url repos.snapshot }
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        minSdkVersion versions.minsdk
        targetSdkVersion versions.sdk

        applicationId "com.philips.cdp.dicommclientsample"
        testApplicationId "com.philips.cdp.dicommclient"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE'
        exclude 'NOTICE'
        exclude 'asm-license.txt'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    def commlib = findProject(':commlib') ? ':commlib' : ':dicommClientLib'

    debugCompile project(path: commlib, configuration: 'debug')
    releaseCompile project(path: commlib, configuration: 'release')

    if (findProject(':cloudcontroller')) {
        debugCompile project(path: ':cloudcontroller', configuration: 'debug')
        releaseCompile project(path: ':cloudcontroller', configuration: 'release')
    } else {
        compile "com.philips.cdp:cloudcontroller:${versions.cloudcontroller}"
    }

    compile deps.support.appcompatv7
}

apply plugin: 'com.android.application'

repositories {
    maven { url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/ext-release-local' }
    maven {
        url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/libs-stage-local-android'
    }
    maven {
        url 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory/libs-release-local-android'
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    defaultConfig {
        applicationId "com.philips.cdp.sampledigitalcare"
        minSdkVersion 19
        targetSdkVersion 23
        renderscriptTargetApi 23
        renderscriptSupportModeEnabled true
        generatedDensities = []
        multiDexEnabled true
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            //  proguardFile 'proguard.pro'
            signingConfig signingConfigs.release
        }
        debug {
            //   proguardFile 'C:/CodeRepository/ConsumerCare/consumer_care_android/Source/Library/launchDigitalCare/proguard.pro'
            minifyEnabled false
            proguardFile 'proguard.pro'
        }
    }

    /*
    This defined for signing the apk -- start
     */
    def Properties props = new Properties()
    def propFile = new File('signing.properties')
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))

        if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            println 'signing.properties found but some entries are missing'
            android.buildTypes.release.signingConfig = null
        }
    } else {
        println 'signing.properties not found'
        android.buildTypes.release.signingConfig = null
    }
    /*
    This defined for signing the apk -- end
    */


    productFlavors {
        simulator {
            applicationId 'com.philips.cdp.sampledigitalcare'
            versionCode 141
            versionName '5.3.0.3'
        }
        device {
            applicationId 'com.philips.cdp.sampledigitalcare'
            versionCode 141
            versionName '5.3.0.3'
        }
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
}


dependencies {
    compile 'com.android.support:recyclerview-v7:23.1.1'
    compile 'com.android.support:appcompat-v7:+'
    compile 'com.android.support:support-v4:+'
    compile 'com.android.support:multidex:+'
    compile(group: 'com.philips.cdp', name: 'Tagging', version: '3.0.0', ext: 'aar')

  /*  compile(group: 'com.philips.cdp', name: 'digitalCare', version: '5.2.1', ext: 'aar')
            {
                transitive = true
            }*/

}

android {
    packagingOptions {
        exclude 'lib/arm64-v8a/librsjni.so'
        pickFirst 'lib/arm64-v8a/libRSSupport.so'
    }
}


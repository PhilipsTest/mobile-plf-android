apply plugin: 'com.android.application'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

apply from: projectDir.absolutePath + '/../../../../../build-support/gradle/cdpscm.gradle'
archivesBaseName = 'AppInfraApp'

buildscript {
    apply from: projectDir.absolutePath + '/../../../../../build-support/gradle/versions.gradle'

    repositories {
        maven { url repos.jcenter
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven {
            url repos.plugin
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
    }

    dependencies {
        classpath builddeps.gradle
        classpath builddeps.buildinfoextractor
        classpath(builddeps.cdpSCM)
    }
}

allprojects {
    repositories {
        maven {
            url repos.plugin
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        maven {
            url objcdp.getArtifactoryUrl()
            credentials {
                username = "readonly"
                password = "123qweasdzxc"
            }
        }
        apply plugin: 'com.jfrog.artifactory'
        group = 'com.philips.cdp'

        flatDir {
            dirs 'libs'
        }
    }
}

android {
    signingConfigs {
        release
    }
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools
    defaultConfig {
        applicationId "com.philips.platform.appinfra.demo"
        minSdkVersion versions.minsdk
        targetSdkVersion versions.target
        versionName version + "(" + objcdp.getCommitHash() + ")"
        versionCode 1
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation deps.junit
    androidTestImplementation deps.espresso_core, {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    implementation deps.support.appcompatv7
    implementation deps.support.design
    def dp = project.ext.has('useprojectdependencies')

    if(dp) {
        implementation project(':uAppFwLib')
        implementation project(':AppInfraUApp')
        implementation project(':AppInfra')
        implementation project(':pif')
    } else {
        implementation philipsdeps.uAppFwLib
        implementation philipsdeps.AppInfra
        implementation philipsdeps.uAppFwLib
        implementation philipsdeps.pif
    }

    implementation deps.leakcanary
}

tasks.withType(Test) {
  ignoreFailures = true
}
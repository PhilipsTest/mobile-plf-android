/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.library'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/projectnames.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/lib.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/zipdocs.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/taskscc.gradle'


buildscript {
    apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'

    dependencies {
        classpath builddeps.buildinfoextractor
        //classpath builddeps.cdpSCM
        classpath builddeps.gradle
    }
}
archivesBaseName = strings.ail.artifactName
android {
    signingConfigs {
        release
    }

    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        versionName version + "(" + commitHash+ ")"
        testApplicationId "com.philips.platform.appinfra.test"
        consumerProguardFiles 'proguard-rules-ail.pro'
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir 'src/main/libs'
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }
}
apply from: project.rootDir.absolutePath + '/build-support/gradle/apidocs.gradle'

dependencies {
    if (useprojectdependencies) {
        implementation project(strings.pif.projectName)
    } else {
        implementation philipsdeps.pif
    }

    implementation deps.adobemobilelib
    implementation deps.gson
    implementation deps.volley
    implementation deps.androidx.annotations
    implementation deps.joda_time
    implementation deps.rxjava2
    implementation deps.junit


    annotationProcessor deps.room_compiler
    annotationProcessor deps.livedata_compiler

    testImplementation deps.robolectric
    testImplementation deps.assertj
    testImplementation deps.junit
    testImplementation deps.powermock_core
    testImplementation deps.powermock_api_mockito
    testImplementation deps.powermock_junit

    androidTestImplementation deps.androidx.runner
    androidTestImplementation deps.dexmaker_mockito
    androidTestImplementation deps.junit
}

tasks.withType(Test) {
    ignoreFailures = true
}
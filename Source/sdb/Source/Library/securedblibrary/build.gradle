/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

apply from: project.rootDir.absolutePath + '/build-support/gradle/cdpscm.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/projectnames.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/lib.gradle'
//apply from: project.rootDir.absolutePath + '/build-support/gradle/taskscc.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'
apply from: project.rootDir.absolutePath + '/build-support/gradle/zipdocs.gradle'

archivesBaseName = strings.sdb.artifactName

buildscript {
    apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'

    dependencies {
        classpath builddeps.gradle
        classpath builddeps.buildinfoextractor
    }
}

//=======To zip and upload "Documents/External" ==STARTS=============
def zipDoc = file(buildDir.name + "/distributions/$project.name-$version-docs" + '.zip')
artifacts {
    archives zipDoc
}

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.buildtools

    defaultConfig {
        versionCode 1
        versionName version
        multiDexEnabled true
    }

    buildTypes {
        release {
            proguardFiles 'proguard-rules-securedb.pro'
        }
        debug {
            debuggable true
            testCoverageEnabled = true
        }
    }
}

apply from: project.rootDir.absolutePath + '/build-support/gradle/apidocs.gradle'

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    if (useprojectdependencies) {
        project.logger.lifecycle('sdb: Picking the dependencies from the code')
        api project(':AppInfra')
    } else {
        project.logger.lifecycle('sdb: Picking the dependencies from the artifactory')
        api philipsdeps.AppInfra
    }

    api deps.ormlite.core
    api deps.sqlcipher

    implementation deps.ormlite.android
    implementation deps.androidx.appcompat
    implementation deps.design
    implementation deps.androidx.annotations

    testImplementation deps.junit

    androidTestImplementation deps.androidx.runner
    androidTestImplementation deps.mockito_android
    implementation deps.kotlin_core_ktx
    implementation deps.kotlin_stdlib_jdk7
}

tasks.withType(Test) {
    ignoreFailures = true
}
repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}
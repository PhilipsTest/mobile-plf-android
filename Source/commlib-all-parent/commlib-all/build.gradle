/*
 * Copyright (c) Koninklijke Philips N.V., 2016
 * All rights reserved.
 */

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.artifactory-upload'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'cdpSCM'

import com.philips.cdp.cdpSCM

def objcdp = new cdpSCM()
objcdp.setProjectDir(projectDir)

group = 'com.philips.cdp'
version = objcdp.getVersion()

artifactory {
    contextUrl = 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory'
    publish {
        repository {
            repoKey = objcdp.getArtifactoryRepoKey('android')
            username = objcdp.getArtifactoryUploadUser()
            password = objcdp.getArtifactoryUploadPwd()
            defaults {
                publishPom = true
                publishIvy = false
                publishBuildInfo = true
            }
        }
    }
    resolve {
        repository {
            repoKey = 'libs-release-local-android'
        }
    }
}

android {
    compileSdkVersion _compileSdkVersion
    buildToolsVersion _buildToolsVersion

    defaultConfig {
        minSdkVersion _minSdkVersion
        targetSdkVersion _targetSdkVersion
        versionCode _versionCode
        versionName version

        consumerProguardFiles 'proguard-rules.pro'
        buildConfigField "String", "LIBRARY_VERSION", "\"${objcdp.getVersionWithHash()}\""
        publishNonDefault true
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:24.2.1'
    provided 'com.android.support:support-annotations:24.2.1'

    def localBlueLibAar = rootDir.absolutePath + '/../../../android-shinelib/Source/ShineLib/shinelib/build/outputs/aar/shinelib-debug.aar'
    if (new File(localBlueLibAar).exists()) {
        println("!!! taking local shinelib !!!")
        compile project(':bluelib')
        compile 'com.google.code.gson:gson:2.7'
    } else {
        compile(group: 'com.philips.cdp', name: 'shinelib', version: '2.2.0-20170110.161347-18')
    }

    def localCommLibAar = rootDir.absolutePath + '/../../../dicomm-android/Source/DICommClient/dicommClientLib/build/outputs/aar/dicommClientLib-debug.aar'
    if (new File(localCommLibAar).exists()) {
        compile project(':commlib')
        compile 'com.philips.cdp:cloudcontroller-api:3.0.0'
        compile 'com.google.code.gson:gson:2.7'
        System.out.println("!!! taking local commlib !!!")
    } else {
        compile(group: 'com.philips.cdp', name: 'dicommClientLib', version: '3.0.0-20170111.105638-8')
    }

    testCompile "org.mockito:mockito-core:2.5.5"
    testCompile 'info.cukes:cucumber-java:1.2.2'
    testCompile 'info.cukes:cucumber-junit:1.2.2'
}

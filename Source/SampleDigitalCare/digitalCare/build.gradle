apply plugin: 'com.android.library'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'com.jfrog.artifactory-upload'

def libVersionNumber = new File('../../VERSION').text.trim()
libVersionNumber = libVersionNumber.replaceAll('-SNAPSHOT', '')

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1'
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 15
        versionName "3.0.1"
        multiDexEnabled true
        testApplicationId "com.philips.cdp.digitalcare.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources true
            testCoverageEnabled true
        }
    }
}

dependencies {
    compile 'com.google.android.gms:play-services:+'
    compile 'com.android.support:appcompat-v7:23+'
    compile project(':adobeMobileLibrary')
    compile project(':localeMatch-v1.1.0')
    androidTestCompile files('libs/dexmaker-1.0.jar')
    androidTestCompile files('libs/dexmaker-mockito-1.0.jar')
    androidTestCompile files('libs/junit-4.12.jar')
    androidTestCompile files('libs/mockito-all-1.10.8.jar')
    compile project(':gson')
    compile 'com.mcxiaoke.volley:library:1.0.17'
    compile project(':Prx')
    compile 'com.philips.cdp:uikitLib:1.0.0'
}


task findbugs(type: FindBugs, dependsOn: assembleDebug) {

    description 'Run findbugs'
    group 'verification'
    ignoreFailures = true
    classes = fileTree('build/intermediates/classes/simulator/debug')
    source = fileTree('src/main/java')
    classpath = files()

    effort = 'max'

    excludeFilter = file("findbugs-exclude.xml")

    reports {
        xml.enabled = true
        html.enabled = false
    }
}

task pmd(type: Pmd, dependsOn: assembleDebug) {

    description 'Run pmd'
    group 'verification'
    ignoreFailures = true
    ruleSets = ["rules/basic.xml", "rules/android.xml", "rules/empty.xml", "rules/imports.xml", "rules/unnecessary.xml", "rules/unusedcode.xml"]
    source = fileTree('src/main/java')

    reports {
        xml.enabled = true
        html.enabled = false
    }
}

//maven configuration stuff required for artifactory plugin
group = 'com.philips.cdp'
version = libVersionNumber

artifactory {
    contextUrl = 'http://maartens-mini.ddns.htc.nl.philips.com:8081/artifactory'
    publish {
        repository {
            repoKey = 'libs-snapshot-local-android'
            username = 'admin'
            password = 'password'
            publishPom = true
            publishIvy = false
            publishBuildInfo = false
        }
    }
    resolve {
        repository {
            repoKey = 'libs-release-local'
        }
    }
}


sourceSets {
    main{
        java {
            srcDirs '../../Source/SampleDigitalCare/launchDigitalCare/src/main/java'
        }
        resources {

            srcDirs '../../Source/SampleDigitalCare/launchDigitalCare/src/main/res'
        }
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.java.srcDirs
   // from('../../Source/SampleDigitalCare/launchDigitalCare/src/main/res')
    classifier 'sources'
}

artifactoryPublish {
    dependsOn sourceJar
}

artifacts {
    archives sourceJar
}
// Propositions can override configurations here
android {

    defaultConfig {
        applicationId "com.philips.platform.referenceapp"
        resConfigs "ar", "bg",  "cs", "da", "de", "el", "en", "en_GB", "es", "es_AR", "es_MX", "et", "fi", "fr", "fr_CA", "he", "hr", "hu", "it", "ja", "ko",  "lt", "lv",  "nb", "nl",  "pl",  "pt", "pt_BR", "ro", "ru", "sk", "sl", "sv", "th", "tr", "vi", "zh_CN", "zh_HK", "zh_TW"
    }

//    testOptions {
//        unitTests.returnDefaultValues = true
//        unitTests.all {
//            // set JVM arguments for the test JVM(s)
//            jvmArgs '-noverify'
//            testLogging {
//                events "started", "passed", "skipped", "failed"
//                outputs.upToDateWhen {false}
//            }
//
//            jacoco {
//                includeNoLocationClasses = false
//            }
//        }
//    }

    dexOptions {
        preDexLibraries = false
        jumboMode = false
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }

    signingConfigs {
        release
    }
    /*
    This defined for signing the apk -- start
     */
    def Properties props = new Properties()
    def propFile = new File("${projectDir}/../signing.properties")
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))

        if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        } else {
            println 'signing.properties found but some entries are missing'
            android.buildTypes.release.signingConfig = null
        }
    } else {
        println 'rap signing.properties not found'
        android.buildTypes.release.signingConfig = null
    }
    /*
    This defined for signing the apk -- end
    */

    buildTypes {
        def BOOLEAN = "bool"
        def TRUE = "true"
        def AWSDK_DEV_SSL_ALLOW_ALL = "awsdk_dev_ssl_allow_all"
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            testCoverageEnabled = true
            resValue BOOLEAN, AWSDK_DEV_SSL_ALLOW_ALL, TRUE
        }

        leakCanary {
            minifyEnabled false
            shrinkResources false
            debuggable true
            signingConfig signingConfigs.debug
            resValue BOOLEAN, AWSDK_DEV_SSL_ALLOW_ALL, TRUE
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFile 'proguard-rules.pro'
            signingConfig signingConfigs.release
            resValue BOOLEAN, AWSDK_DEV_SSL_ALLOW_ALL, TRUE
        }
        psraRelease {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFile 'proguard-rules.pro'
            signingConfig signingConfigs.release
            resValue BOOLEAN, AWSDK_DEV_SSL_ALLOW_ALL, TRUE
        }
    }
}

android.defaultConfig.manifestPlaceholders = [
        'appAuthRedirectScheme': 'com.googleusercontent.apps.346000571262-arpks5qhm771a2mfbm4e829va12olmtf'
]
apply plugin: 'com.android.application'
apply plugin: 'findbugs'
apply plugin: 'pmd'


android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    defaultConfig {
        applicationId "com.philips.cdp.sampledigitalcareapp"
        minSdkVersion 15
        targetSdkVersion 21

        testApplicationId "com.philips.cdp.sampledigitalcareapp.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        debug {
            debuggable true
            testCoverageEnabled true
        }
    }

    productFlavors {
        simulator {
            applicationId 'com.philips.cdp.sampledigitalcareapp'
            versionCode 122
            versionName "2.0.8"
        }
        device {
            applicationId 'com.philips.cdp.sampledigitalcareapp'
            versionCode 122
            versionName "2.0.8"
        }
    }
}

dependencies {
    compile project(':digitalCare')
    compile 'com.google.android.gms:play-services:+'
    compile files('libs/HockeySDK-3.0.2.jar')
    androidTestCompile files('libs/dexmaker-1.0.jar')
    androidTestCompile files('libs/dexmaker-mockito-1.0.jar')
    androidTestCompile files('libs/junit-4.12.jar')
    androidTestCompile files('libs/mockito-all-1.10.8.jar')
}

task findbugs(type: FindBugs, dependsOn: assembleDebug) {

    description 'Run findbugs'
    group 'verification'
    ignoreFailures = true
    classes = fileTree('build/intermediates/classes/simulator/debug')
    source = fileTree('src/main/java')
    classpath = files()

    effort = 'max'

    excludeFilter = file("findbugs-exclude.xml")

    reports {
        xml.enabled = true
        html.enabled = false
    }
}

task pmd(type: Pmd, dependsOn: assembleDebug) {

    description 'Run pmd'
    group 'verification'
    ignoreFailures = true
    ruleSets = ["rules/basic.xml", "rules/android.xml", "rules/empty.xml", "rules/imports.xml", "rules/unnecessary.xml", "rules/unusedcode.xml"]
    source = fileTree('src/main/java')

    reports {
        xml.enabled = true
        html.enabled = false
    }
}


/*
 * Copyright (c) 2015-2018 Koninklijke Philips N.V.
 * All rights reserved.
 */
ext.baseplatformversion = "1805.0"
ext.platformversion = baseplatformversion + "." + epochTime()
def static epochTime() {
    def env_epoch = System.getenv('EPOCH_TIME')
    long local_epoch = System.currentTimeMillis() / 1000
    def epoch = env_epoch != null ? env_epoch : local_epoch
    return epoch
}
buildscript {
    apply from: projectDir.absolutePath + '/build-support/gradle/versions.gradle'

    repositories {
       google()
        jcenter()
        maven {
            url 'https://pkgs.dev.azure.com/PhilipsAgile/_packaging/mobile-plf-ios-artifacts/maven/v1'
            credentials {
                username "AZURE_ARTIFACTS"
                password System.getenv("AZURE_ARTIFACTS_ENV_ACCESS_TOKEN") ?: "${azureArtifactsGradleAccessToken}"
            }
        }
    }

    dependencies {
        classpath builddeps.gradle
        classpath builddeps.buildinfoextractor
        // dsc & rap require this
        classpath builddeps.googleservices // rap-pushnotification requires this
        classpath builddeps.pitest
    }
}

subprojects {
    task reportAllProjectDependencies(type: DependencyReportTask) {}

    buildscript {
        apply from: project.rootDir.absolutePath + '/build-support/gradle/versions.gradle'

        repositories {
            google()
            jcenter()
            maven {
                url 'https://pkgs.dev.azure.com/PhilipsAgile/_packaging/mobile-plf-android-artifacts/maven/v1'
                credentials {
                    username "AZURE_ARTIFACTS"
                    password System.getenv("AZURE_ARTIFACTS_ENV_ACCESS_TOKEN") ?: "${azureArtifactsGradleAccessToken}"
                }
            }
        }
    }

    repositories {
        google()
        jcenter()
        maven {
            url 'https://pkgs.dev.azure.com/PhilipsAgile/_packaging/mobile-plf-android-artifacts/maven/v1'
            credentials {
                username "AZURE_ARTIFACTS"
                password System.getenv("AZURE_ARTIFACTS_ENV_ACCESS_TOKEN") ?: "${azureArtifactsGradleAccessToken}"
            }
        }
    }

    afterEvaluate {
        android {
            defaultConfig {
                minSdkVersion versions.minsdk
                targetSdkVersion versions.target
                testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            }

            compileOptions {
                sourceCompatibility versions.sourceCompatibility
                targetCompatibility versions.targetCompatibility
            }

            lintOptions {
                abortOnError false
            }

            testOptions {
                unitTests {
                    // As per Robolectric documentation
                    includeAndroidResources true

                    all {
                        jvmArgs '-noverify'
                        systemProperty 'robolectric.enabledSdks', '28'
                    }
                }
            }

            packagingOptions {
                exclude 'META-INF/proguard/androidx-annotations.pro'
            }

            dependencies {
                testImplementation deps.robolectric
                testImplementation deps.robolectric_junit
                testImplementation deps.robolectric_shadows
                testImplementation deps.robolectric_shadows_multidex
                testImplementation deps.robolectric_utils
            }
        }
    }

    group = 'com.philips.cdp'
    version = platformversion

    if (!it.projectDir.exists()) {
        throw new GradleException("Project not found ${it}")
    }

    ext.useprojectdependencies = true
}



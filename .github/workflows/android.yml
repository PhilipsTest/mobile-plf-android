name: Android CI

on:
  workflow_dispatch:
    inputs:
      App Center:
        description: 'App Center Deploy'
        required: false
        default: true
      PSRA:
        description: 'Build with PSRA'
        required: false
        default: false
      LeakCanary:
        description: 'Build with LeakCanary'
        required: false
        default: false
      HPFortify:
        description: 'HP-Fortify'
        required: false
        default: false
      JavaDocs:
        description: 'Java-Docs'
        required: false
        default: false
           
  push:
    branches:
      - '**'
  pull_request:
    branches: [ feature/GitHub_Actions ]
  
  #Set your workflow to run every day of the week at 17:00 UTC(10:30 PM)
  schedule:
  - cron:  0 17 * * 0-6

jobs:
  Build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2.3.3
      with:
        fetch-depth: 0
        clean: true
        submodules: true
        lfs: true
  
    - name: Build & Test with Gradle
      run: |
           echo 'Running'
           ./gradlew --refresh-dependencies --full-stacktrace clean assembleRelease \
            :AppInfra:testReleaseUnitTest \
            :uAppFwLib:testReleaseUnitTest \
            :registrationApi:testReleaseUnitTest \
            :product-registration-lib:testReleaseUnitTest \
            :iap:testReleaseUnitTest \
            :digitalCareUApp:testRelease \
            :digitalCare:testRelease \
            :mya:testReleaseUnitTest \
            :pif:testReleaseUnitTest \
            :pim:testReleaseUnitTest \
            :conversationalChatBot:testReleaseUnitTest \
            :philipsecommercesdk:testReleaseUnitTest \
            :mec:testReleaseUnitTest \
            :pimApp:testReleaseUnitTest \
            :referenceApp:testReleaseUnitTest
    
    - name: Upload APK
      uses: actions/upload-artifact@v2.2.0
      with:
        name: APK's for ReferenceApp & PIMDemoApp
       #${{github.workspace}}/source/pim/Source/DemoApp/app/build/outputs/apk/release/*.apk
        path: '${{github.workspace}}/**/*.apk'
          
    
    #publish to artifactory only for master,develop and release/platform_*
    - name: Publish To Artifactory
      #if: 
       # contains('
        #  refs/heads/master
         # refs/heads/develop
          #refs/heads/release/platform_*
          #', github.ref)
      if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/release/platform_')
      #if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/release/platform_'
      #if: contains(github.ref,'master') || contains(github.ref,'develop') || contains(github.ref,'release/platform_')        
      shell: bash
      run: |
           echo ${{github.ref}}
           ./gradlew --full-stacktrace saveResDep saveAllResolvedDependenciesGradleFormat zipDocuments artifactoryPublish :referenceApp:printArtifactoryApkPath :AppInfra:zipcClogs :securedblibrary:zipcClogs :pim:zipcClogs :conversationalChatBot:zipcClogs :registrationApi:zipcClogs :productselection:zipcClogs :digitalCareUApp:zipcClogs :digitalCare:zipcClogs :pimApp:zipcClogs
  
    #- name: Jacoco Reports
     # shell: bash
      #run: |
       #    ./gradlew test
        #   ./gradlew jacocoTestReport
    
    - name: Lint
      shell: bash
      #cp -R '${{github.workspace}}/Source/**/lint*.xml' ${{github.workspace}}/Source/lint-results
      #file ${{github.workspace}}/Source/lint-results
      run: |
           ./gradlew  \
            :AppInfra:lint \
            :securedblibrary:lint \
            :pim:lint \
            :conversationalChatBot:lint \
            :registrationApi:lint \
            :productselection:lint \
            :product-registration-lib:lint \
            :iap:lint \
            :digitalCare:lint \
            :mya:lint \
            :mec:lint \
            :pif:lint \
            :themesettings:lintRelease
            #prx:lint and rap:lintRelease are not working and we are keeping it as known issues
    
    #- uses: yutailang0119/action-android-lint@v1.0.2
     # with:
      #  xml_path: ${{github.workspace}}/Source<copied file path>
   
    #- name: App Center Deploy
     # uses: wzieba/AppCenter-Github-Action@v1.3.1
      #with:
       # appName: PhilipsTest/mobile-plf-android
        #token: ef3e10e34d02bc58a2f754a425ad8f4c8196f222
        ## Distribution group
        #group: QA
        ## Artefact to upload (.apk or .ipa)
        #file: '${{github.workspace}}/**/*.apk'
        ## Release notes visible on release page
        #releaseNotes: R1
        ## If true, send an email notification to the distribution group
        #notifyTesters: true
    
   # - name: App Center Distribute
  ## You may pin to the exact commit or the version.
  ## uses: devussy/AppCenter-Distribute-Github-Action@15b2bfc756f26bc5125e761b229bdb8005926760
    #  uses: devussy/AppCenter-Distribute-Github-Action@v1.0.2
     # with:
    ## App name followed by username e.g. devussy/Sample-App
      #  app: PhilipsTest/mobile-plf-android
    ## Upload token - you can get one from appcenter.ms/settings
      #  token: ef3e10e34d02bc58a2f754a425ad8f4c8196f222
    ## Distribution group
      #  group: QA
    ## Artifact to upload (.apk or .ipa)
      #  file: '${{github.workspace}}/**/*.apk'
    ## Release notes visible on release page
      #  releaseNotes: R.Test
    ## Flag to determine whether notify testers of this release or not (true/false)
      #  silent: true
            
  App-Center:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.6
        with:
              # Artifact name
         name: APK's for ReferenceApp & PIMDemoApp
              # Destination path
         path: '${{github.workspace}}/APK'
      
      - name: App Center Deploy
        uses: wzieba/AppCenter-Github-Action@v1.3.1
        with:
         appName: PhilipsTest/mobile-plf-android
         token: ef3e10e34d02bc58a2f754a425ad8f4c8196f222
        # Distribution group
         group: QA
        # Artefact to upload (.apk or .ipa)
         file: ${{github.workspace}}/APK/*.apk
        # Release notes visible on release page
         releaseNotes: R1
        # If true, send an email notification to the distribution group
         notifyTesters: true
         
  PSRA-Build:
    if: github.event.inputs.PSRA == 'true' || github.event_name == 'schedule'
    needs: Build
    runs-on: self-hosted
    steps:
    - name: PSRABuildTest
      run: |
          ./gradlew referenceApp:assemblePsraRelease
          ./gradlew pimApp:assemblePsraRelease
    
    #print referenceApp artifactory path
    #fetch apk name from apkname.txt file which is generated in reference app's build.gradle
    #flushing psra apk to specified path
    - name: Publish PSRA apk
      shell: bash
      run: |
           ./gradlew :referenceApp:printArtifactoryApkPath
           apkname=`xargs < apkname.txt`
           PSRA_APK_NAME=${apkname/.apk/_PSRA.apk}
           curl -L -u 320049003:AP4ZB7JSmiC4pZmeKfKTGLsFvV9 -X PUT ${PSRA_APK_NAME} -T Source/rap/Source/AppFramework/appFramework/build/outputs/apk/psraRelease/referenceApp-psraRelease.apk
           curl -L -u 320049003:AP4ZB7JSmiC4pZmeKfKTGLsFvV9 -X PUT ${PSRA_APK_NAME} -T Source/pim/Source/DemoApp/app/build/outputs/apk/psraRelease/pimApp-psraRelease.apk
    
    - name: Upload APK
      uses: actions/upload-artifact@v2.2.0
      with:
        name: PSRA APK's for ReferenceApp & PIMDemoApp
        path: |
          ${{github.workspace}}/Source/rap/Source/AppFramework/appFramework/build/outputs/psraRelease/referenceApp-psraRelease.apk
          ${{github.workspace}}/source/pim/Source/DemoApp/app/build/outputs/apk/release/*.apk
   
  LeakCanary-Build:
    if: github.event.inputs.LeakCanary == 'true'
    runs-on: self-hosted
    steps:
    - name: LeakCanaryBuildTest
      run: |
           ./gradlew referenceApp:assembleLeakCanary
           ./gradlew pimApp:assembleLeakCanary
 
  HPFortify-Build:
    if: github.event.inputs.HPFortify == 'true' || github.event_name == 'schedule'
    runs-on: self-hosted
    steps:
    - name: HP-Fortify-Build
      shell: bash
      run: |
          chmod a+rwx
          ./fortify.sh
  
  JAVA-Docs:
    if: github.event.inputs.JavaDocs == 'true'
    needs: Build
    runs-on: self-hosted
    steps:
    - name: GenerateJavaDocs
      shell: bash
      run: |
           ./gradlew :AppInfra:generateJavadocPublicApi \
           :securedblibrary:generateJavadocPublicApi \
           :registrationApi:generateJavadocPublicApi \
           :pim:generateJavadocPublicApi \
           :conversationalChatBot:generateJavadocPublicApi \
           :productselection:generateJavadocPublicApi \
           :pif:generateJavadocPublicApi \
           :digitalCare:generateJavadocPublicApi \
           :iap:generateJavadocPublicApi \
           :product-registration-lib:generateJavadocPublicApi \
           :philipsecommercesdk:generateJavadocPublicApi \
           :referenceApp:generateJavadocPublicApi \ 


    

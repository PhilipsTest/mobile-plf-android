name: Android CI

on:
  workflow_dispatch:
    inputs:
      PSRA:
        description: 'Build with PSRA'
        required: false
        default: false
      LeakCanary:
        description: 'Build with LeakCanary'
        required: false
        default: false
      HPFortify:
        description: 'HP-Fortify'
        required: false
        default: false
      JavaDocs:
        description: 'Java-Docs'
        required: false
        default: false
           
  push:
    branches:
      - '**'
  pull_request:
    branches: [ feature/GitHub_Actions ]
  
  #Set your workflow to run every day of the week at 17:00 UTC(10:30 PM)
  schedule:
  - cron:  0 17 * * 0-6

jobs:
  Build:
    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v2.3.3
      with:
        fetch-depth: 0
        clean: true
        submodules: true
        lfs: true
  
    - name: Build & Test with Gradle
      run: |
           echo 'Running' 
    
    - name: Upload APK
      uses: actions/upload-artifact@v2.2.0
      with:
        name: APK's for ReferenceApp & PIMDemoApp
        path: |
          ${{github.workspace}}/Source/rap/Source/AppFramework/appFramework/build/outputs/apk/release/*.apk
          ${{github.workspace}}/source/pim/Source/DemoApp/app/build/outputs/apk/release/*.apk
    
    #publish to artifactory only for master,develop and release/platform_*
    - name: Publish To Artifactory
      #if: 
       # contains('
        #  refs/heads/master
         # refs/heads/develop
          #refs/heads/release/platform_*
          #', github.ref)
      if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/release/platform_')
      #if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/release/platform_'
      #if: contains(github.ref,'master') || contains(github.ref,'develop') || contains(github.ref,'release/platform_')        
      shell: bash
      run: |
           echo ${{github.ref}}
           ./gradlew --full-stacktrace saveResDep saveAllResolvedDependenciesGradleFormat zipDocuments artifactoryPublish :referenceApp:printArtifactoryApkPath :AppInfra:zipcClogs :securedblibrary:zipcClogs :pim:zipcClogs :conversationalChatBot:zipcClogs :registrationApi:zipcClogs :productselection:zipcClogs :digitalCareUApp:zipcClogs :digitalCare:zipcClogs :pimApp:zipcClogs
  
    #- name: Jacoco Reports
     # shell: bash
      #run: |
       #    ./gradlew test
        #   ./gradlew jacocoTestReport
    
    - name: Lint
      shell: bash
      run: |
           ./gradlew  \
            :AppInfra:lint
            :securedblibrary:lint \
            :pim:lint \
            :conversationalChatBot:lint \
            :registrationApi:lint \
            :productselection:lint \
            :product-registration-lib:lint \
            :iap:lint \
            :digitalCare:lint \
            :mya:lint \
            :mec:lint \
            :pif:lint \
            :themesettings:lintRelease
            #prx:lint and rap:lintRelease are not working and we are keeping it as known issues
    
    - uses: yutailang0119/action-android-lint@v1.0.2
      with:
        xml_path: |
                  ${{github.workspace}}/Source/ail/Source/Library/AppInfra/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/sdb/Source/Library/securedblibrary/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/pim/Source/Library/pim/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/ccb/Source/Library/conversationalchatbot/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/usr/Source/Library/RegistrationApi/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/pse/Source/Library/productselection/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/prg/Source/Library/product-registration-lib/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/iap/Source/Library/iap/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/dcc/Source/Library/digitalCare/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/mya/Source/Library/mya/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/mec/Source/Library/mec/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/pif/Source/Library/pif/build/reports/lint-results.xml \
                  ${{github.workspace}}/Source/rap/Source/AppFramework/themesettings/build/reports/lint-results-release.xml \
                  ${{github.workspace}}/Source/mec/Source/Library/mec/build/reports/lint-results.xml
                  
            
  PSRA-Build:
    if: github.event.inputs.PSRA == 'true' || github.event_name == 'schedule'
    needs: Build
    runs-on: self-hosted
    steps:
    - name: PSRABuildTest
      run: |
          ./gradlew referenceApp:assemblePsraRelease
          ./gradlew pimApp:assemblePsraRelease
    
    #print referenceApp artifactory path
    #fetch apk name from apkname.txt file which is generated in reference app's build.gradle
    #flushing psra apk to specified path
    - name: Publish PSRA apk
      shell: bash
      run: |
           ./gradlew :referenceApp:printArtifactoryApkPath
           apkname=`xargs < apkname.txt`
           PSRA_APK_NAME=${apkname/.apk/_PSRA.apk}
           curl -L -u 320049003:AP4ZB7JSmiC4pZmeKfKTGLsFvV9 -X PUT ${PSRA_APK_NAME} -T Source/rap/Source/AppFramework/appFramework/build/outputs/apk/psraRelease/referenceApp-psraRelease.apk
           curl -L -u 320049003:AP4ZB7JSmiC4pZmeKfKTGLsFvV9 -X PUT ${PSRA_APK_NAME} -T Source/pim/Source/DemoApp/app/build/outputs/apk/psraRelease/pimApp-psraRelease.apk
    
    - name: Upload APK
      uses: actions/upload-artifact@v2.2.0
      with:
        name: PSRA APK's for ReferenceApp & PIMDemoApp
        path: |
          ${{github.workspace}}/Source/rap/Source/AppFramework/appFramework/build/outputs/psraRelease/referenceApp-psraRelease.apk
          ${{github.workspace}}/source/pim/Source/DemoApp/app/build/outputs/apk/release/*.apk
   
  LeakCanary-Build:
    if: github.event.inputs.LeakCanary == 'true'
    runs-on: self-hosted
    steps:
    - name: LeakCanaryBuildTest
      run: |
           ./gradlew referenceApp:assembleLeakCanary
           ./gradlew pimApp:assembleLeakCanary
 
  HPFortify-Build:
    if: github.event.inputs.HPFortify == 'true' || github.event_name == 'schedule'
    runs-on: self-hosted
    steps:
    - name: HP-Fortify-Build
      shell: bash
      run: |
          chmod a+rwx
          ./fortify.sh
  
  JAVA-Docs:
    if: github.event.inputs.JavaDocs == 'true'
    needs: Build
    runs-on: self-hosted
    steps:
    - name: GenerateJavaDocs
      shell: bash
      run: |
           ./gradlew :AppInfra:generateJavadocPublicApi \
           :securedblibrary:generateJavadocPublicApi \
           :registrationApi:generateJavadocPublicApi \
           :pim:generateJavadocPublicApi \
           :conversationalChatBot:generateJavadocPublicApi \
           :productselection:generateJavadocPublicApi \
           :pif:generateJavadocPublicApi \
           :digitalCare:generateJavadocPublicApi \
           :iap:generateJavadocPublicApi \
           :product-registration-lib:generateJavadocPublicApi \
           :philipsecommercesdk:generateJavadocPublicApi \
           :referenceApp:generateJavadocPublicApi \ 


    

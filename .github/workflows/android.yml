name: Android CI

on:
  workflow_dispatch:
    #inputs:
     # PSRA:
      #  description: 'Build with PSRA'
       # required: false
        #default: false
      #LeakCanary:
       # description: 'Build with LeakCanary'
        #required: false
        #default: false
      #HPFortify:
       # description: 'HP-Fortify'
        #required: false
        #default: false
      #JavaDocs:
       # description: 'Java-Docs'
        #required: false
        #default: false
           
  push:
    branches:
      - '**'
  #pull_request:
   # branches: [ feature/GitHub_Actions ]
  
  #Set your workflow to run every day of the week at 21:00 UTC(2:30 AM)
  schedule:
  - cron:  0 21 * * 0-6

jobs:
  Build:
    runs-on: self-hosted

    steps:
    #- uses: actions/checkout@v2.3.3
     # with:
      #  fetch-depth: 0
       # clean: true
        #submodules: true
        #lfs: true
  
    - name: Build & Test with Gradle
      run: |
           echo 'Running'
           ./gradlew --refresh-dependencies --full-stacktrace clean assembleRelease \
            :referenceApp:testReleaseUnitTest 
    
    - name: Upload APK and dependencies.lock
      uses: actions/upload-artifact@v2.2.0
      with:
        name: APK's and dependencies.lock
        #${{github.workspace}}/Source/rap/Source/AppFramework/appFramework/build/outputs/apk/release/*.apk
          #${{github.workspace}}/source/pim/Source/DemoApp/app/build/outputs/apk/release/*.apk
          #${{github.workspace}}/**/*.apk
          #${{github.workspace}}/source/pim/Source/DemoApp/app/build/outputs/apk/release/*.apk
        path: |
          ${{github.workspace}}/Source/rap/Source/AppFramework/appFramework/*.lock
          ${{github.workspace}}/Source/rap/Source/AppFramework/appFramework/build/outputs/apk/release/*.apk
          
    
    #publish to artifactory only for master,develop and release/platform_*
    #- name: Publish To Artifactory
     # if: startsWith(github.ref, 'refs/heads/master') || startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/release/platform_') && github.event.inputs.Publish-Artifactory == 'true'
      #if: contains(github.ref,'master') || contains(github.ref,'develop') || contains(github.ref,'release/platform_')        
      #shell: bash
      #run: |
       #   ./gradlew --full-stacktrace saveResDep saveAllResolvedDependenciesGradleFormat zipDocuments artifactoryPublish :referenceApp:printArtifactoryApkPath :AppInfra:zipcClogs :securedblibrary:zipcClogs :pim:zipcClogs :conversationalChatBot:zipcClogs :registrationApi:zipcClogs :productselection:zipcClogs :digitalCareUApp:zipcClogs :digitalCare:zipcClogs :pimApp:zipcClogs

    #- name: Jacoco Reports
     # shell: bash
      #run: |
       #    ./gradlew test
        #   ./gradlew jacocoTestReport
    
    #- name: Lint
     # shell: bash
      #run: |
       #    ./gradlew  \
        #    :AppInfra:lint \
         #   :securedblibrary:lint \
          #  :pim:lint \
           # :conversationalChatBot:lint \
            #:registrationApi:lint \
            #:productselection:lint \
            #:product-registration-lib:lint \
            #:iap:lint \
            #:digitalCare:lint \
            #:mya:lint \
            #:pif:lint \
            #:themesettings:lintRelease
            #prx:lint and rap:lintRelease are not working and we are keeping it as known issues
            
  PSRA-Build:
    if: github.event.inputs.PSRA == 'true' #|| github.event_name == 'schedule'
    needs: Build
    runs-on: self-hosted
    steps:
    - name: PSRABuildTest
      run: |
          ./gradlew referenceApp:assemblePsraRelease
          ./gradlew pimApp:assemblePsraRelease
    
    #print referenceApp artifactory path
    #fetch apk name from apkname.txt file which is generated in reference app's build.gradle
    #flushing psra apk to specified path
    - name: Publish PSRA apk
      shell: bash
      run: |
           ./gradlew :referenceApp:printArtifactoryApkPath
           apkname=`xargs < apkname.txt`
           PSRA_APK_NAME=${apkname/.apk/_PSRA.apk}
           curl -L -u 320049003:AP4ZB7JSmiC4pZmeKfKTGLsFvV9 -X PUT ${PSRA_APK_NAME} -T Source/rap/Source/AppFramework/appFramework/build/outputs/apk/psraRelease/referenceApp-psraRelease.apk
           curl -L -u 320049003:AP4ZB7JSmiC4pZmeKfKTGLsFvV9 -X PUT ${PSRA_APK_NAME} -T Source/pim/Source/DemoApp/app/build/outputs/apk/psraRelease/pimApp-psraRelease.apk
    
    - name: Upload APK
      uses: actions/upload-artifact@v2.2.0
      with:
        name: PSRA APK's for ReferenceApp & PIMDemoApp
        path: |
          ${{github.workspace}}/Source/rap/Source/AppFramework/appFramework/build/outputs/psraRelease/referenceApp-psraRelease.apk
          ${{github.workspace}}/source/pim/Source/DemoApp/app/build/outputs/apk/release/*.apk
   
  LeakCanary-Build:
    if: github.event.inputs.LeakCanary == 'true'
    runs-on: self-hosted
    steps:
    - name: LeakCanaryBuildTest
      run: |
           ./gradlew referenceApp:assembleLeakCanary
           ./gradlew pimApp:assembleLeakCanary
 
  HPFortify-Build:
    if: github.event.inputs.HPFortify == 'true' #|| github.event_name == 'schedule'
    runs-on: self-hosted
    steps:
    - name: HP-Fortify-Build
      shell: bash
      run: |
          chmod -R 755 .
          ./fortify.sh
  
  JAVA-Docs:
    if: github.event.inputs.JavaDocs == 'true'
    needs: Build
    runs-on: self-hosted
    steps:
    - name: GenerateJavaDocs
      shell: bash
      run: |
           ./gradlew :AppInfra:generateJavadocPublicApi \
           :securedblibrary:generateJavadocPublicApi \
           :registrationApi:generateJavadocPublicApi \
           :pim:generateJavadocPublicApi \
           :conversationalChatBot:generateJavadocPublicApi \
           :productselection:generateJavadocPublicApi \
           :pif:generateJavadocPublicApi \
           :digitalCare:generateJavadocPublicApi \
           :iap:generateJavadocPublicApi \
           :product-registration-lib:generateJavadocPublicApi \
           :philipsecommercesdk:generateJavadocPublicApi \
           :referenceApp:generateJavadocPublicApi \ 


    
